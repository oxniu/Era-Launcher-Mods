ZVSE2
; Author:   Valery, renewed by Archer30
; Special thanks to Jim Vogan and Hawaiing
; Engine:   ERM 2.0+
; Requires: ERA 3.4+, Era Erm Framework

; Ultimate trainer for ERA


;FU7780004 spells cadres
;FU7780005 air spells
;FU7780006 water spells
;FU7780007 earth spells
;FU7780008 fire spells
;FU7780009 reset clicked cadres
;FU7780010 loop magic schools
;FU7780011 hero forgets all spells
;FU7780012 *removed*
;FU7780013 check hero skills and set cadres
;FU7780014 resources
;FU7780015 level
;FU7780016 level increment
;FU7780017 primary skills check
;FU7780018 hero army
;FU7780019 browse towns
;FU7780020 *removed*
;FU7780021 transfer creatures from pool to army
;FU7780022 artifacts
;FU7780023 artifacts right-click
;FU7780024 get stack rank
;FU7780025  get commander skills values
;FU7780026 *removed*
;FU7780027 get commanders types display
;FU7780028 find empty slot commander
;FU7780029 find if commander has already got that artifact
;FU7780030 *removed*
;FU7780031 *removed*
;FU7780032-FU7780034 forget all skills, frames


!?FU(OnAfterErmInstructions);
!!FU(trainer_CheckWoGScripts):P;
!!FU(trainer_GetFirstHumanPlayer):P?(player:y);
!!VRi^trainer_objChoice^:S0;            [default option - the first option]
!!VRi^trainer_ownerChoice^:S(player);

!?FU(trainer_CheckWoGScripts);
!!UN:P36/?i^wog42_on^;                  [check mithril enhancement]

!?FU(trainer_GetFirstHumanPlayer);
!#VA(player:x);

!!re i/(PLAYER_FIRST)/(PLAYER_LAST);
  !!OW:Ii/?(controller:y);

  !!VR(player)&(controller)=0:Si;
  !!br&(controller)=0;
!!en;

!?FU(OnKeyPressed_AdvMap)&i^key^=(KEY_F2)/999;
!#VA(key:x) (preventDefault:x) (isDown:x);

!!VR(preventDefault):S(TRUE);

!!VR(sound:z):S^Military.wav^;
!!SN:P(sound);

!!FU(trainer_SelectHeroMain):P;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=99/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!SN:E5118576/3/i^trainer_hero^/1/1/1;  [display hero dialogue, 5th parameter for type of dialogue]

!?FU(trainer_SelectHeroMain);
!!VRi^trainer_hero^:S(NO_HERO);         [initialise hero ID]

!!SN:T^trainer.titleMain^/?z6;
!!SN:T^trainer.legendMain^/?z7;
!!IF:D55/6/7/0/0/0/0/0;
!!IF:E1/55;
!!VRz1:H1;                              [**check if text entered, flag 1=1 if yes]
!!FU&v1<0:E;                            [Exit on Esc but don't exit when nothing input]
!!VRs^trainer_input^:Sz1;

!!FU(trainer_SelectHeroByInput)&1:P?(isWrongName:y);
!!FU&(isWrongName):E;

!!OW&i^trainer_hero^=(NO_HERO):C?(currPlayer:y);
!!FU(trainer_SelectHeroByPlayer)&i^trainer_hero^=(NO_HERO):P(currPlayer)/0/0;
!!FU(trainer_MainDialog)&i^trainer_hero^>(NO_HERO):P;

!?FU(trainer_SelectHeroByInput);
!#VA(isWrongName:x);

!!VRz1:Ss^trainer_input^;
!!VR(firstCharIsNum:y):S(FALSE);        [initialise flag of ID recognition]
!!UN:C9597928/1/?(firstChar:y);
!!VR(firstCharIsNum)&(firstChar)>=48/(firstChar)<=57:S(TRUE); [Hawaiing - exit if the first character of z1 is not a number. Do not change z1!]

!!VR(hero:y)&(firstCharIsNum):Vz1;

!!if&(firstCharIsNum)/(hero)>(NO_HERO)/(hero)<=(HERO_LAST_WOG);  [doesn't support extended hero id]
  !!VRi^trainer_hero^:S(hero); 
!!el;

  !!re i/(HERO_FIRST)/(HERO_LAST_WOG);  [search for names if id didn't work]
    !!HEi:B0/?z2;

    !!br&z2=z1;
  !!en;

  !!if&i<=(HERO_LAST_WOG);
    !!VRi^trainer_hero^:Si;
  !!el;
    !!SN:T^trainer.wrongName^/?z3;
    !!IF:M^%z3^;
    !!VR(isWrongName):S(TRUE);
  !!en;
!!en;

!?FU(trainer_SelectHeroByPlayer);
!#VA(player:x) (isOSMain:x) (isOSTelpt:x);[x2 - mode for OS Scanner main, x3 - mode for Object Scanner teleportation]

!!OW:A(player)/?(activeHero:y);         [check active hero of the player]

!!if&(activeHero)>(NO_HERO);
  !!VRi^trainer_hero^:S(activeHero);
!!el;                                   [if no active hero, check for heroes on the map]
  !!VRv2:S(NO_HERO);
  !!OW:H(player)/2/1;                   [check the first hero of the player and store in v2]

  !!if&v2>(NO_HERO);
    !!VRi^trainer_hero^:Sv2;

  !!el&(isOSTelpt);
    !!SN:T^trainer.objTelptNoHero^/?(telptNoHero:z);
    !!IF:M^%(telptNoHero)^;

  !!el&(isOSTelpt)=(FALSE);
    !!re i/(HERO_FIRST)/(HERO_LAST_WOG);[if not on the map...in towns maybe? excluding OS teleporation - serious bugs if teleporting a hero from a town]
      !!HEi:O?(owner:y);
      !!VRi^trainer_hero^&(player)=(owner):Si;

      !!br&(player)=(owner);
    !!en;

    !!if&i>(HERO_LAST_WOG)/(isOSMain)=(FALSE); [pop up msg if no hero, excluding OS main second search]
      !!SN:T^trainer.noHero^/?(noHero:z);
      !!IF:M^%(noHero)^;
    !!en;
  !!en;
!!en;

!?FU(trainer_MainDialog);
!!VRy1:Si^trainer_hero^;                [set trainer hero number]
!!HEy1:B0/?z1;                          [export name to z1]
!!VRs^trainer_hero^:Sz1;                [set trainer hero string]
!!HEy1:O?i^trainer_player^;             [set trainer player number]
!!FU(trainer_GetPlayerStr):Pi^trainer_player^; [set trainer player string]

!!FU(trainer_GetPsCap):P;               [check if prima.dll is enabled]

!!FU318717:Py1/1/2;                     [export hero's portrait to z2]
!!DL(TRAINER_MAIN_DLG):N^trainer.txt^;

*!FU(trainer_SetDlgColour):P(TRAINER_MAIN_DLG)/i^trainer_player^; [set dialogue colour - disable for now]

!!VRi^trainer_dialogEnabled^:S(TRUE);   [flag for trainer interface]

!!if&i^wog42_on^=(FALSE);               [Archer - hide mithril if disabled]
  !!DL(TRAINER_MAIN_DLG):A113/4/0;      [113 - mithril cadre]
  !!VRz30:S^^;                          [BE VERY CAREFUL! Always avoid z30 to z32 in other places of this script - need DL mouse hovering trigger to fix]
  !!DL(TRAINER_MAIN_DLG):H(TRAINER_MITHRIL_AREA)/z30; [DL:H doesn't work on ^^]
!!en;

!!UN:P49/(henchOn:y);

!!if&(henchOn)=(FALSE);               [hide henchman button if disabled or the slot is empty]

  !!re i/228/234;
    !!DL(TRAINER_MAIN_DLG):Ei/0;
  !!en;

  !!DL(TRAINER_MAIN_DLG):E(TRAINER_BTN_HENCH)/0;
!!en;

!!if&i^Advanced_Classes_Mod_Active^;
  !!SN:T^trainer.acm.ss5^/?z31 T^trainer.acm.ss19^/?z32;
  !!DL(TRAINER_MAIN_DLG):H60/z31;       [item of nobility (navigation)]
  !!DL(TRAINER_MAIN_DLG):H74/z32;       [item of warfare (tactics)]
!!en;

!!HEy1:Ed/?y2;
!!VRi^trainer_heroLv^:Sy2;
!!FU7780015:Py2; hero level
!!FU7780017:Py1; hero stats
!!DO7780018/0/6/1:Py1; hero army
!!HEy1:G?y11 W?y12/1; get movement
!!DL(TRAINER_MAIN_DLG)&y12<110:A30/4/0/1; set frames for movement def empty
!!DL(TRAINER_MAIN_DLG)&y12<500/y12>109:A30/4/1/1;  few
!!DL(TRAINER_MAIN_DLG)&y11=y12:A30/4/2/1;  normal
!!DL(TRAINER_MAIN_DLG)&y12>y11:A30/4/3/1;  extra
!!HEy1:Fd/d/d/?y10; get knowledge
!!HEy1:I?y11/1;    get mana
!!VRy13:Sy10*10; match knowledge to mana
!!HEy1:S24/?y12; get intelligence rank %25/%50/%100

!!if&y12>0;
  !!VRy14&y12=1:Sy13:4;
  !!VRy13&y12=1:+y14;
  !!VRy14&y12=2:Sy13:2;
  !!VRy13&y12=2:+y14;
  !!VRy13&y12=2:*2;
!!en; y13 knowledge, y11 mana

!!DL(TRAINER_MAIN_DLG)&y11<5:A31/4/0/1; if mana below 5, empty frame
!!DL(TRAINER_MAIN_DLG)&y11>4/y11<y13:A31/4/1/1;
!!DL(TRAINER_MAIN_DLG)&y11=y13:A31/4/2/1;
!!DL(TRAINER_MAIN_DLG)&y11>y13:A31/4/3/1;
!!SN:W^Arts_V_1^/1;   initialize artifacts order
!!DO7780022/526/540/1:Py1/7/0;          [check artifacts]
!!SN:W^Castle_H^/1; initialize army recruits
!!DL(TRAINER_MAIN_DLG):A99/11/z2/1;
!!SN:W^Fire_school^/1;
!!SN:W^Air_school^/0;
!!SN:W^Water_school^/0;
!!SN:W^Earth_school^/0;
!!DO7780004/196/213/1:P;

!!FU(acm_CreateSsNamesArray)&i^Advanced_Classes_Mod_Active^:P;
!!DO7780013/0/27/1:Py1;                 [set sec skills cadres]

!!VRy2:Si^trainer_player^;
!!DO7780014/0/7/1&y2>-1:Py2/10;         [Archer - check resources including mithril]

!!if&y2<0;
  !!VRz5:S^0^;
  !!DL(TRAINER_MAIN_DLG):A21/3/z5/1; change resources value for neutral player
  !!DL(TRAINER_MAIN_DLG):A22/3/z5/1;
  !!DL(TRAINER_MAIN_DLG):A23/3/z5/1;
  !!DL(TRAINER_MAIN_DLG):A24/3/z5/1;
  !!DL(TRAINER_MAIN_DLG):A25/3/z5/1;
  !!DL(TRAINER_MAIN_DLG):A26/3/z5/1;
  !!DL(TRAINER_MAIN_DLG):A27/3/z5/1;
  !!DL(TRAINER_MAIN_DLG)&i^wog42_on^:A(TRAINER_MITHRIL_AREA)/3/z5/1;    [set mithril value]
!!en;

!!DL(TRAINER_MAIN_DLG):S1;

!?FU318717; Â© Master Of Puppets
; x1 - hero number
; x2 - small portrait to z[number]
; x3 - large portrait to z[number]
!!VRx1:*92+8144112;
!!UN:Cx1/4/?y1;
!!VRx1:+4;
!!UN:Cx1/4/?y2;
!!VRx2:*512+9597416;
!!VRx3:*512+9597416;
!!DO318727/1/512/1:Py1/x2 Py2/x3;

!?FU(trainer_GetPlayerStr);
!#VA(player:x);
!!SN&(player)=(PLAYER_RED):T^trainer.red^/?s^trainer_player^;
!!SN&(player)=(PLAYER_BLUE):T^trainer.blue^/?s^trainer_player^;
!!SN&(player)=(PLAYER_TAN):T^trainer.tan^/?s^trainer_player^;
!!SN&(player)=(PLAYER_GREEN):T^trainer.green^/?s^trainer_player^;
!!SN&(player)=(PLAYER_ORANGE):T^trainer.orange^/?s^trainer_player^;
!!SN&(player)=(PLAYER_PURPLE):T^trainer.purple^/?s^trainer_player^;
!!SN&(player)=(PLAYER_TEAL):T^trainer.teal^/?s^trainer_player^;
!!SN&(player)=(PLAYER_PINK):T^trainer.pink^/?s^trainer_player^;

!?FU(trainer_SetDlgColour);
!!SN:E7510739/1/x1;
!!UN:Cv1/4/?y1;
!!VRy2:Sy1 +76;
!!UN:Cy2/4/?y3;
!!SN:E6288384/2/y1/512/13/y3/x2;

!?FU(acm_CreateSsNamesArray);
!!FU(NewStrArray):P28/?i^acm_ssNames^/(M_TEMP);
!!SN:Vi^acm_ssNames^/0/^Pathfinding^/^Archery^/^Logistics^/^Scouting^/^Diplomacy^/^Nobility^/^Leadership^
  /^Wisdom^/^Mysticism^/^Luck^/^Ballistics^/^Eagle Eye^/^Necromancy^/^Estates^;
!!SN:Vi^acm_ssNames^/0/^Fire Magic^/^Air Magic^/^Water Magic^/^Earth Magic^/^Scholar^/^Tactics^/^Artillery^
  /^Learning^/^Offense^/^Armorer^/^Intelligence^/^Sorcery^/^Resistance^/^First Aid^;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=30722/i^mouse_action^=(MOUSE_LMB_RELEASED);      [close trainer]
!!VR(hero:y):Si^trainer_hero^;
!!HE(hero):E?(exp:y)/?(lv:y);

!!VR(lvNew:y):Si^trainer_heroLv^;

!!if&(lvNew)<>(lv);           [if hero's lv was changed]
  !!VR(lvFixed:y):Si^trainer_heroLv^ F1/(TRAINER_LEVEL_CAP_LEGIT);
  !!FU7780016:P(lvFixed)/?(expNew:y);  
  !!HE(hero):E(expNew);

  !!if&(lvNew)>(TRAINER_LEVEL_CAP_LEGIT);
    !!FU(trainer_GetFixedLv):P(lvNew)/(TRUE)/?(lvFixedNew:y);
    !!HE(hero):E?(exp)/(lvFixedNew);
  !!en;

  *!FU7780015&i^trainer_heroLv^=75:P88; [update lv on the interface]
  *!FU7780015&i^trainer_heroLv^=89:P100;
  *!FU7780015&i^trainer_heroLv^=101:P108;
  *!FU7780015&i^trainer_heroLv^=109:P868;

  *!FU&i^trainer_heroLv^>(lv):E;        [don't quit trainer interface if hero was leveled up - have to figure out how to refresh on closing Hero lv up screen!]
!!en;

!!DL(TRAINER_MAIN_DLG):C1;

!!SN:W^Arts_V_1^/0;
!!SN:W^Arts_V_2^/0;
!!SN:W^Arts_V_3^/0;
!!SN:W^Arts_V_4^/0;
!!SN:W^Arts_V_5^/0;
!!SN:W^Arts_V_6^/0;
!!SN:W^Arts_V_7^/0;
!!SN:W^Arts_V_8^/0;
!!SN:W^Arts_V_9^/0;
!!SN:W^Arts_V_10^/0;
!!SN:W^Arts_V_11^/0;

!!SN:W^Rampart_H^/0;
!!SN:W^Tower_H^/0;
!!SN:W^Inferno_H^/0;
!!SN:W^Necropolis_H^/0;
!!SN:W^Dungeon_H^/0;
!!SN:W^Stronghold_H^/0;
!!SN:W^Fortress_H^/0;
!!SN:W^Conflux_H^/0;
!!SN:W^Neutral_1^/0;
!!SN:W^Neutral_2^/0;

!!re i/196/212;                         [de-select all fire spells (spell of the first page)]
  !!VRi^Fire_%i^:S0;
!!en;

!!UN:R1 R2;                             [Redraw]
!!VRi^trainer_dialogEnabled^:S(FALSE);  [flag for trainer interface]

!?FU(trainer_GetFixedLv);
!#VA(lv:x) (isLvUp:x) (lvFixed:x);

!!VR(lvFixed)&(lv)<=(TRAINER_LEVEL_CAP_LEGIT):S(lv);

!!if&(isLvUp);
  !!if&(lv)>(TRAINER_LEVEL_CAP_LEGIT)/(lv)<=88;
    !!VR(lvFixed):S88;
  !!el&(lv)>88/(lv)<=100;
    !!VR(lvFixed):S100;
  !!el&(lv)>100/(lv)<=108;
    !!VR(lvFixed):S108;
  !!el&(lv)>108/(lv)<=868;
    !!VR(lvFixed):S868;
  !!el&(lv)>868/(lv)<=3732;
    !!VR(lvFixed):S3732;
  !!el&(lv)>3732/(lv)<=5920;
    !!VR(lvFixed):S5920;
  !!el&(lv)>5920/(lv)<=(TRAINER_LEVEL_CAP_EXTREME);
    !!VR(lvFixed):S(TRAINER_LEVEL_CAP_EXTREME);
  !!el&(lv)>(TRAINER_LEVEL_CAP_EXTREME);
    !!VR(lvFixed):S1;
  !!en;
!!el;
  !!if&(lv)<1;
    !!VR(lvFixed):S(TRAINER_LEVEL_CAP_EXTREME);
  !!el&(lv)>=(TRAINER_LEVEL_CAP_LEGIT)/(lv)<88;
    !!VR(lvFixed):S(TRAINER_LEVEL_CAP_LEGIT);
  !!el&(lv)>=88/(lv)<100;
    !!VR(lvFixed):S88;
  !!el&(lv)>=100/(lv)<108;
    !!VR(lvFixed):S100;
  !!el&(lv)>=108/(lv)<868;
    !!VR(lvFixed):S108;
  !!el&(lv)>=868/(lv)<3732;
    !!VR(lvFixed):S868;
  !!el&(lv)>=3732/(lv)<5920;
    !!VR(lvFixed):S3732;
  !!el&(lv)>=5920/(lv)<(TRAINER_LEVEL_CAP_EXTREME);
    !!VR(lvFixed):S5920;
  !!el&(lv)>=(TRAINER_LEVEL_CAP_EXTREME);
    !!VR(lvFixed):S(TRAINER_LEVEL_CAP_EXTREME);
  !!en;
!!en;

****************************SPELLS****************************************
;button magic schools/right
!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=14/i^mouse_action^=(MOUSE_LMB_RELEASED);
!!SN:W^Fire_school^/?y1;
!!SN:W^Air_school^/?y2;
!!SN:W^Water_school^/?y3;
!!SN:W^Earth_School^/?y4;
!!DO7780005/36/53/1&y1=1:P18;           [fire-->air]
!!DL(TRAINER_MAIN_DLG)&y1=1:A11/4/1/1;
!!DO7780006/36/53/1&y2=1:P36;           [air-->water]
!!DL(TRAINER_MAIN_DLG)&y2=1:A11/4/2/1;
!!DO7780007/36/53/1&y3=1:P54;           [water-->earth]
!!DL(TRAINER_MAIN_DLG)&y3=1:A11/4/3/1;
!!DO7780008/36/53/1&y4=1:P0;            [Archer - earth-->fire]
!!DL(TRAINER_MAIN_DLG)&y4=1:A11/4/0/1;
!!SN&y1=1:W^Air_school^/1;
!!SN&y1=1:W^Fire_school^/0;
!!SN&y2=1:W^Water_school^/1;
!!SN&y2=1:W^Air_school^/0;
!!SN&y3=1:W^Earth_school^/1;
!!SN&y3=1:W^Water_school^/0;
!!SN&y4=1:W^Fire_school^/1;
!!SN&y4=1:W^Earth_school^/0;
!!DO7780004/196/213/1:P;                [reset selected cadres, if any]
!!DO7780009/196/213/1:P;

!?FU7780005;
;display air spells icons
!!DL(TRAINER_MAIN_DLG):Ax16/4/x1/1;
!!VRx1:+1;
!?FU7780006;
;display water spells icons
!!DL(TRAINER_MAIN_DLG):Ax16/4/x1/1;
!!VRx1:+1;
!?FU7780007;
;display earth spells icons
!!DL(TRAINER_MAIN_DLG):Ax16/4/x1/1;
!!VRx1:+1;
!?FU7780008;
;display fire spells icons
!!DL(TRAINER_MAIN_DLG):Ax16/4/x1/1;
!!VRx1:+1;

;button magic schools/left
!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=13/i^mouse_action^=(MOUSE_LMB_RELEASED);
!!SN:W^Earth_school^/?y1;
!!SN:W^Water_school^/?y2;
!!SN:W^Air_school^/?y3;
!!SN:W^Fire_school^/?y4;
!!DO7780006/36/53/1&y1=1:P36;           [earth-->water]
!!DL(TRAINER_MAIN_DLG)&y1=1:A11/4/2/1;
!!DO7780005/36/53/1&y2=1:P18;           [water-->air]
!!DL(TRAINER_MAIN_DLG)&y2=1:A11/4/1/1;
!!DO7780008/36/53/1&y3=1:P0;            [air-->fire]
!!DL(TRAINER_MAIN_DLG)&y3=1:A11/4/0/1;
!!DO7780008/36/53/1&y4=1:P54;            [fire-->earth]
!!DL(TRAINER_MAIN_DLG)&y4=1:A11/4/3/1;
!!SN&y1=1:W^Water_school^/1;
!!SN&y1=1:W^Earth_school^/0;
!!SN&y2=1:W^Air_school^/1;
!!SN&y2=1:W^Water_school^/0;
!!SN&y3=1:W^Fire_school^/1;
!!SN&y3=1:W^Air_school^/0;
!!SN&y4=1:W^Earth_school^/1;
!!SN&y4=1:W^Fire_school^/0;
!!DO7780004/196/213/1:P;                [reset selected cadres, if any]
!!DO7780009/196/213/1:P;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>195/i^mouse_item^<214/i^mouse_action^=(MOUSE_RMB_PRESSED);
;Display spells names on right click
!!if&i^Fire_school^;
  !!FU&i^mouse_item^=213:E; last icon is not used
  !!VRv2:C43/42/15/31/62/13/21/11/52/26/59/29/56/22/55/66; [index of fire spells]
  !!VRv18:S40;
!!el&i^Air_school^;
  !!VRv2:C53/47/51/17/44/30/28/25/60/19/58/69/36/5/4/2; [index of air spells]
  !!VRv18:C8/6;
!!el&i^Water_school^;
  !!FU&i^mouse_item^=213:E; last icon is not used
  !!VRv2:C41/37/35/32/16/64/45/61/20/49/63/65/48/68/0/1; [index of water spells]
  !!VRv18:S7;
!!el&i^Earth_school^;
  !!VRv2:C15/27/54/46/24/10/39/34/14/12/33/23/38/50/67/18; [index of earth spells]
  !!VRv18:C3/9;
!!en;

!!VR(ptr:y):Si^mouse_item^-194;         [get click location to match v2-v20]
!!VR(spell:y):Sv(ptr);                  [spell is now stored in y6]
!!SN:H^spell^/(spell)/(SPELL_TEXT_DESCR)/?(spellDesc:z); [store spell description in z3]
!!IF:Q1/9/(spell)/4^%(spellDesc)^;      [display spell graphic and name]

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>195/i^mouse_item^<214/i^mouse_action^=(MOUSE_LMB_PRESSED);
;select spells
!!SN:W^Fire_school^/?y1;                [check page]
!!SN:W^Air_school^/?y2;
!!SN:W^Water_school^/?y3;
!!SN:W^Earth_school^/?y4;
!!FU&y1=1/i^mouse_item^=213:E;          [Archer - toggle spell cadre]
!!FU&y3=1/i^mouse_item^=213:E;          [exit if last icon in fire/water indexes]

!!VRy30:S0;
!!VRy30&y1=1/i^Fire_%i(mouse_item)^=1:S1;
!!VRy30&y2=1/i^Air_%i(mouse_item)^=1:S1;
!!VRy30&y3=1/i^Water_%i(mouse_item)^=1:S1;
!!VRy30&y4=1/i^Earth_%i(mouse_item)^=1:S1;

!!if&y30=0;
  !!DL(TRAINER_MAIN_DLG):Ai^mouse_item^/4/1/1; [set to selected]
  !!SN&y1=1:W^Fire_%i(mouse_item)^/1;
  !!SN&y2=1:W^Air_%i(mouse_item)^/1;
  !!SN&y3=1:W^Water_%i(mouse_item)^/1;
  !!SN&y4=1:W^Earth_%i(mouse_item)^/1;
!!el;
  !!DL(TRAINER_MAIN_DLG):Ai^mouse_item^/4/0/1; [set to de-selected]
  !!SN&y1=1:W^Fire_%i(mouse_item)^/0;
  !!SN&y2=1:W^Air_%i(mouse_item)^/0;
  !!SN&y3=1:W^Water_%i(mouse_item)^/0;
  !!SN&y4=1:W^Earth_%i(mouse_item)^/0;
!!en;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=110/i^mouse_action^=(MOUSE_LMB_RELEASED); Button hero forgets all spells
!!re i/196/213;                         [Archer - deselect all by forget all spell button]
  !!VRy30:S0;
  !!VRy30&i^Fire_School^=1/i^Fire_%i^=1:S1;
  !!VRy30&i^Air_School^=1/i^Air_%i^=1:S1;
  !!VRy30&i^Water_School^=1/i^Water_%i^=1:S1;
  !!VRy30&i^Earth_School^=1/i^Earth_%i^=1:S1;

  !!if&y30=1;
    !!DO7780009/196/213/1:P;
    !!DO7780004/196/213/1:P;
    !!FU:E;
  !!en;
!!en;

!!SN:W^trainer_hero^/?y1;
!!HEy1:B0/?z1;
!!SN:T^trainer.forgAllSpl^/?z2/^hero^/z1;
!!IF:Q1^%z2^;
!!FU&-1:E;

!!DO7780011/0/69/1:Py1;
!!SN:T^trainer.forgAllSpl2^/?z3/^hero^/z1;
!!IF:M^%z3^;
!!VRz1:S^openbook.wav^;
!!SN:Pz1;

!?FU7780011;                            [Hero forgets all spells]
!!HEx1:Mx16/?y1;
!!HEx1&y1=1:Mx16/0;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=109/i^mouse_action^=(MOUSE_LMB_RELEASED); Button learn spells selected
!!SN:W^Fire_school^/?y1;                [find in which index we are]
!!SN:W^Air_school^/?y2;
!!SN:W^Water_school^/?y3;
!!SN:W^Earth_school^/?y4;

!!if|y1=1/y3=1;                         [Archer - select all by learn spell button]

  !!re i/196/212;

    !!br&y1=1/i^Fire_%i^=1;
    !!br&y3=1/i^Water_%i^=1;

    !!if&i=212;
    
      !!re i/196/212;
        !!VRi^Fire_%i^:S1;
        !!VRi^Air_%i^:S1;
        !!VRi^Water_%i^:S1;
        !!VRi^Earth_%i^:S1;
        !!DL(TRAINER_MAIN_DLG):Ai/4/1/1;
      !!en;
      !!FU:E;
    !!en;
  !!en;
!!en;

!!if|y2=1/y4=1;

  !!re i/196/213;

    !!br&y2=1/i^Air_%i^=1;
    !!br&y4=1/i^Earth_%i^=1;

    !!if&i=213;

      !!re i/196/213;
        !!VRi^Fire_%i^:S1;
        !!VRi^Air_%i^:S1;
        !!VRi^Water_%i^:S1;
        !!VRi^Earth_%i^:S1;
        !!DL(TRAINER_MAIN_DLG):Ai/4/1/1;
      !!en;
      !!FU:E;
    !!en;
  !!en;
!!en;

!!VRy30:Si^trainer_hero^;               [disable annoying pop-ups]
!!HEy30:B0/?z6;
!!HEy30:A2/0/?y7/?y8;
!!HEy30&y8<1:A4/0;                      [give spell book]
!!VRz4:S^^;
!!VRz5:S^^;
!!DO7780010/196/213/1&y1=1:P0;
!!DO7780010/196/213/1&y2=1:P1;
!!DO7780010/196/213/1&y3=1:P2;
!!DO7780010/196/213/1&y4=1:P3;

!!if&z4<>^^;
  !!SN:T^trainer.splLearned^/?z2/^hero^/z6/^spell^/z4;
  !!IF:M^%z2^;
!!en;

!!if&z5<>^^;
  !!SN:T^trainer.splLearns^/?z3/^hero^/z6/^spell^/z5;
  !!IF:M^%z3^;
  !!VRz1:S^openbook.wav^;
  !!SN:Pz1;
!!en;

!!DO7780009/196/213/1:P;                [reset spells after learning them]
!!DO7780004/196/213/1:P;                [reset cadres]

!?FU7780010;
;x1 magic school ID
!!VRz1&x1=0:S^Fire^;
!!VRz1&x1=1:S^Air^;
!!VRz1&x1=2:S^Water^;
!!VRz1&x1=3:S^Earth^;
!!SN:W^%Z1_%X16^/?y1;
!!FU&y1<1:E;

!!if&x1=0;
  !!FU&x16=213:E;                       [last icon is not used]
  !!VRv2:C42/43/15/31/62/13/21/11/52/26/59/29/56/22/55/66; [index of fire spells]
  !!VRv18:S40;
!!el&x1=1;
  !!VRv2:C53/47/51/17/44/30/28/25/60/19/58/69/36/5/4/2; [index of air spells]
  !!VRv18:C8/6;
!!el&x1=2;
  !!FU&x16=213:E;                       [last icon is not used]
  !!VRv2:C41/37/35/32/16/64/45/61/20/49/63/65/48/68/0/1; [index of water spells]
  !!VRv18:S7;
!!el&x1=3;
  !!VRv2:C15/27/54/46/24/10/39/34/14/12/33/23/38/50/67/18; [index of earth spells]
  !!VRv18:C3/9;
!!en;

!!VRy5:Sx16-194;                        [get click location to match v2-v20]
!!VRy6:Svy5;                            [spell is now stored in y6]
!!VRy30:Si^trainer_hero^;
!!HEy30:My6/?y7;
!!UN:N1/z3/y6;
!!SN:T^trainer.comma^/?z1;

!!if&y7=1;
  !!VRz4&z4<>^^:+^%z1^;
  !!VRz4:+z3;
!!el;
  !!VRz5&z5<>^^:+^%z1^;
  !!VRz5:+z3;
  !!HEy30:My6/1;
!!en;

!?FU7780009;                            [forget spells selected if change magic school]
!!SN:W^Fire_%X16^/0;
!!SN:W^Air_%X16^/0;
!!SN:W^Water_%X16^/0;
!!SN:W^Earth_%X16^/0;

!?FU7780004;
;spells cadres reset to 0
!!DL(TRAINER_MAIN_DLG):Ax16/4/0/1;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=54/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!if&i^Fire_school^;
  !!VR(school:y):S(SKILL_FIRE_MAGIC);
!!el&i^Air_school^;
  !!VR(school):S(SKILL_AIR_MAGIC);
!!el&i^Water_school^;
  !!VR(school):S(SKILL_WATER_MAGIC);
!!el&i^Earth_school^;
  !!VR(school):S(SKILL_EARTH_MAGIC);
!!en;

!!SN:H^secskill^/(school)/0/?(schoolName:z);
!!VR(picSubtype:y):S(school) *3 +3 +2;
!!IF:Q1/(PIC_TYPE_SEC_SKILL)/(picSubtype)/4^%(schoolName)^;

*********************************END SPELLS*********************************

*******************************Secondary Skills*****************************

!?FU7780013;                            [set ss cadres]
;x1=HERO ID
!!HEx1:Sx16/?(ssLv:y);

!!VR(ssItem:y):Sx16 +55;
!!VR(ssHighlight:y):Sx16 +168;

!!FU(trainer_RefreshSs):Px16/(ssLv)/(ssItem)/(ssHighlight);

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>=55/i^mouse_item^<=82/i^mouse_action^=(MOUSE_LMB_PRESSED);
!!VR(ss:y):Si^mouse_item^ -55;

!!if&i^Advanced_Classes_Mod_Active^=(FALSE);
  !!SN:H^secskill^/(ss)/(SKILL_NOT_LEARNED)/?z1;
  !!HEi^trainer_hero^:S(ss)/?(ssLv:y);
  !!VR(choice:y):S1 Sd<<3;              [default choice - expert]
!!en;

!!if&i^Advanced_Classes_Mod_Active^;    [get maste/grand maste skill levels (acm)]
  !!SN:T^trainer.acm.ss%(ss)^/?z1;
  !!HEi^trainer_hero^:S(ss)/?(ssLv:y);

  !!SN:Mi^acm_ssNames^/(ss)/?z10;
  !!VR(hero:y):Si^trainer_hero^;

  !!if&(ssLv)=3;
    !!VR(ssLv)&i^H3_%z10_0_Hero%(hero)^/i^H3_%z10_1_Hero%(hero)^=(FALSE):S4;
    !!VR(ssLv)&i^H3_%z10_0_Hero%(hero)^/i^H3_%z10_1_Hero%(hero)^:S5;
  !!en;
  !!VR(choice:y):S1 Sd<<5;              [default choice - grand master]
!!en;

*!VR(choice:y):S1 Sd<<(ssLv);

!!SN:T^trainer.titleSs^/?z2/^ss^/z1/^hero^/s^trainer_hero^;
!!SN:T^trainer.notLearned^/?z3;
!!SN:T^trainer.basic^/?z4;
!!SN:T^trainer.advanced^/?z5;
!!SN:T^trainer.expert^/?z6;
!!SN:T^trainer.chgMind^/?z7;

!!if&i^Advanced_Classes_Mod_Active^=(FALSE);
  !!IF:G1/1/(choice)/2/3/4/5/6/7;
  !!FU(IntLog2):Pv1/?(ssLvNew:y);

  !!FU&(ssLvNew)=4:E;

  !!HEi^trainer_hero^:S(ss)/(ssLvNew);
!!en;

!!if&i^Advanced_Classes_Mod_Active^;
  !!SN:T^trainer.acm.master^/?z8;
  !!SN:T^trainer.acm.grandMaster^/?z9;
  !!IF:G1/1/(choice)/2/3/4/5/6/8/9/7;
  !!FU(IntLog2):Pv1/?(ssLvNew);

  !!FU&(ssLvNew)=6:E;

  !!if&(ssLvNew)<=3;
    !!VRi^H3_%z10_0_Hero%(hero)^:S(FALSE);
    !!VRi^H3_%z10_1_Hero%(hero)^:S(FALSE);
    !!HEi^trainer_hero^:S(ss)/(ssLvNew);
  !!el&(ssLvNew)=4;                        [set up Master/Grand Master level of skills (acm)]
    !!VRi^H3_%z10_0_Hero%(hero)^:S(TRUE);
    !!VRi^H3_%z10_1_Hero%(hero)^:S(FALSE);
    !!HEi^trainer_hero^:S(ss)/3;
  !!el&(ssLvNew)>=5;
    !!VRi^H3_%z10_0_Hero%(hero)^:S(TRUE);
    !!VRi^H3_%z10_1_Hero%(hero)^:S(TRUE);
    !!HEi^trainer_hero^:S(ss)/3;
  !!en;
!!en;

!!VR(ssHighlight:y):S(ss) +168;

!!FU(trainer_RefreshSs):P(ss)/(ssLvNew)/i^mouse_item^/(ssHighlight);

!!if&(ssLv)<>(ssLvNew);
  !!VRz1:S^NwHeroLv.wav^;
  !!SN:Pz1;
!!en;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>=55/i^mouse_item^<=82/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!VR(ss:y):Si^mouse_item^ -55;
!!HEi^trainer_hero^:S(ss)/?(ssLv:y);
!!VR(ssLv):F0/3;                        [restrain ss lv - not comparible with ss level greater than expert]
!!SN:H^secskill^/(ss)/(ssLv)/?(ssDesc:z);
!!VR(ssLv):F1/3;                        [restrain ss lv - pic subtype donesn't work with not learn lv]
!!VR(picSubtype:y):S(ss) *3 +(ssLv) +2;
!!IF:Q1/(PIC_TYPE_SEC_SKILL)/(picSubtype)/4^%(ssDesc)^;

!?FU(trainer_RefreshSs);
!#VA(ss:x) (ssLv:x) (ssItem:x) (ssHighlight:x);

!!DL(TRAINER_MAIN_DLG)&(ssLv)<=(SKILL_ADVANCED):A(ssHighlight)/4/0/1; [not learned/basic/advanced - no highlight]

!!if&(ssLv)>(SKILL_ADVANCED)/i^Advanced_Classes_Mod_Active^=(FALSE);
  !!DL(TRAINER_MAIN_DLG):A(ssHighlight)/4/1/1; [expert - highlighted]
!!en;

!!if&(ssLv)=(SKILL_NOT_LEARNED);        [set up cadre - not learned - dark icon]
  !!VR(ssCadInd:y):S(ss) +28;
!!el;
  !!VR(ssCadInd:y):S(ss);
!!en;

!!DL(TRAINER_MAIN_DLG):A(ssItem)/4/(ssCadInd)/1;

!!if&i^Advanced_Classes_Mod_Active^;
  !!VR(hero:y):Si^trainer_hero^;
  !!SN:Mi^acm_ssNames^/(ss)/?(ssName:z);

  !!if&i^H3_%(ssName)_1_Hero%(hero)^;
    !!DL(TRAINER_MAIN_DLG):A(ssHighlight)/4/1/1; [grand master - highlighted (ACM)]
  !!el;
    !!DL(TRAINER_MAIN_DLG):A(ssHighlight)/4/0/1;
  !!en;
!!en;

!!if&i^Advanced_Classes_Mod_Active^;
  !!DO(AC_Set_SS_Description)/(SEC_SKILL_FIRST)/(SEC_SKILL_LAST)/1:Pi^trainer_hero^; [Set new Skill descriptions for ACM]
  !!DO(AC_Set_SS_Names)/(SEC_SKILL_FIRST)/(SEC_SKILL_LAST)/1:Pi^trainer_hero^;       [Set new Skill names for ACM]
!!en;

*****************End Secondary Skills*******************

*****************Resources*****************************

!?FU7780014;
;x1 player ID
!!OW:Rx1/x16/?y1;
!!VRzx2:M3/y1;                          [convert var to z]
!!DL(TRAINER_MAIN_DLG)&x16=0:A21/3/zx2/1;[change resources value in hints]
!!DL(TRAINER_MAIN_DLG)&x16=1:A22/3/zx2/1;
!!DL(TRAINER_MAIN_DLG)&x16=2:A23/3/zx2/1;
!!DL(TRAINER_MAIN_DLG)&x16=3:A24/3/zx2/1;
!!DL(TRAINER_MAIN_DLG)&x16=4:A25/3/zx2/1;
!!DL(TRAINER_MAIN_DLG)&x16=5:A26/3/zx2/1;
!!DL(TRAINER_MAIN_DLG)&x16=6:A27/3/zx2/1;
!!DL(TRAINER_MAIN_DLG)&x16=7/i^wog42_on^:A(TRAINER_MITHRIL_AREA)/3/zx2/1; [Archer - mithril]

!!if&i^wog42_on^=(FALSE);
  !!VRz30:S^^;
  !!DL(TRAINER_MAIN_DLG)&x16=7:A(TRAINER_MITHRIL_AREA)/3/z30/1;
!!en;

!!VRx2:+1;                              [increment for next loop]

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_action^=(MOUSE_LMB_PRESSED);[mithril]
!!VRy30:S0;
!!VRy30&i^mouse_item^>=21/i^mouse_item^<=27:S1;
!!VRy30&i^wog42_on^/i^mouse_item^=(TRAINER_MITHRIL_AREA):S2;
!!FU&y30=0:E;

!!SN:W^trainer_player^/?y12;            [set current player]

!!if&y12<0;
  !!SN:T^trainer.resNeut^/?z1;
  !!IF:M^%z1^;
  !!FU:E;
!!en;

!!VRy1&y30=1:Si^mouse_item^ -21;
!!VRy1&y30=2:S7;

!!SN&y1=(RES_WOOD):T^trainer.wood^/?z5;
!!SN&y1=(RES_MERCURY):T^trainer.mercury^/?z5;
!!SN&y1=(RES_ORE):T^trainer.ore^/?z5;
!!SN&y1=(RES_SULFUR):T^trainer.sulfer^/?z5;
!!SN&y1=(RES_CRYSTAL):T^trainer.crystal^/?z5;
!!SN&y1=(RES_GEMS):T^trainer.gems^/?z5;
!!SN&y1=(RES_GOLD):T^trainer.gold^/?z5;
!!SN&y1=(RES_MITHRIL):T^trainer.mithril^/?z5;

!!SN&y1<>(RES_GEMS):T^trainer.much^/?z8;
!!SN&y1=(RES_GEMS):T^trainer.many^/?z8; [use "many" for gem]            

!!SN:T^trainer.titleRes^/?z6/^qty^/z8/^res^/z5/^colour^/s^trainer_player^;
!!SN:T^trainer.legendRes^/?z7/^res^/z5;
!!IF:D55/6/7/0/0/0/0/0;
!!IF:E1/55;
!!VRz1:H1;                              [**check if text entered, flag 1=1 if yes]
!!FU|-1/v1<0:E;

!!VRy2:Vz1;
!!VRy2:F0/(INT_MAX);                    [restrain value]
!!OW&y1=0:Ry12/0/y2;
!!OW&y1=1:Ry12/1/y2;
!!OW&y1=2:Ry12/2/y2;
!!OW&y1=3:Ry12/3/y2;
!!OW&y1=4:Ry12/4/y2;
!!OW&y1=5:Ry12/5/y2;
!!OW&y1=6:Ry12/6/y2;
!!OW&y1=7:Ry12/7/y2;
!!DO7780014/0/7/1:Py12/10;              [Archer - redraw resources with mithril]
!!VRz1:S^gold01.wav^;
!!SN:Pz1;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_action^=(MOUSE_RMB_PRESSED); [RMB info]
!!VR(flag:y):S(FALSE);
!!VR(flag)&i^mouse_item^>=21/i^mouse_item^<=27:S1;
!!VR(flag)&i^wog42_on^/i^mouse_item^=(TRAINER_MITHRIL_AREA):S2;
!!FU&(flag)=(FALSE):E;

!!VR(resType:y)&(flag)=1:Si^mouse_item^ -21;
!!VR(resType:y)&(flag)=2:S(RES_MITHRIL);

!!SN&(resType)=(RES_WOOD):T^trainer.wood^/?z1;
!!SN&(resType)=(RES_MERCURY):T^trainer.mercury^/?z1;
!!SN&(resType)=(RES_ORE):T^trainer.ore^/?z1;
!!SN&(resType)=(RES_SULFUR):T^trainer.sulfer^/?z1;
!!SN&(resType)=(RES_CRYSTAL):T^trainer.crystal^/?z1;
!!SN&(resType)=(RES_GEMS):T^trainer.gems^/?z1;
!!SN&(resType)=(RES_GOLD):T^trainer.gold^/?z1;
!!SN&(resType)=(RES_MITHRIL):T^trainer.mithril^/?z1;
!!OW:Ri^trainer_player^/(resType)/?(resQty:y);
!!IF:Q1/(resType)/(resQty)/4^%z1^;

************************End Resources*******************************

************************HERO level**********************************

!?FU7780015;
;x1 hero level
!!VRz21:S^%x1^;
!!DL(TRAINER_MAIN_DLG):A147/3/z21/1;    [do not change z21!]

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=1/i^mouse_action^=(MOUSE_LMB_PRESSED);
!!SN:W^trainer_hero^/?y3;
!!HEy3:B0/?z3;
!!SN:T^trainer.heroLvReset^/?z2/^hero^/z3;
!!IF:Q1/17/0/17/0/17/0/2^%z2^;
!!FU&-1:E;
!!HEy3:E89/1;
!!VRz1:S^trn_quest.wav^;
!!SN:Pz1;
!!DO7780032/0/27/1:Py3;                 [forget all skills]
!!DO7780033/55/82/1:P;                  [reset skills frames]
!!DO7780034/168/195/1:P;                [reset cadres frames]
!!FU7780015:P1;

!!VRi^trainer_heroLv^:S1;               [reset hero level global var to 1]

!?FU7780032;
;x1 hero ID
!!HEx1:Sx16/0;

!?FU7780033;
!!VRy1:Sx16 -27;
!!DL(TRAINER_MAIN_DLG):Ax16/4/y1/1;

!?FU7780034;
!!DL(TRAINER_MAIN_DLG):Ax16/4/0/1;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=147/i^mouse_action^=(MOUSE_LMB_PRESSED); [set hero level by entering number]
!!SN:T^trainer.titleHeroLv^/?z2/^hero^/s^trainer_hero^;
!!SN:T^trainer.legendHeroLv^/?z3/^maxLeg^/(TRAINER_LEVEL_CAP_LEGIT)/^maxExt^/(TRAINER_LEVEL_CAP_EXTREME);
!!IF:D30/2/3/^^;
!!IF:E1/30;                             [1 = index of v, 30 = number of extended dialog]
!!VRz1:H1;                              [check if text entered, flag 1=1 if yes]
!!FU|-1/v1<0:E;                         [end function if empty or Esc]

!!VR(lv:y):Vz1;
!!VR(lv):F1/(TRAINER_LEVEL_CAP_EXTREME);
!!FU(trainer_GetFixedLv):P(lv)/(FALSE)/?(lvFixed:y);
!!FU7780015:P(lvFixed);                 [refresh interface]
!!VRi^trainer_heroLv^:S(lvFixed);

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>=300/i^mouse_item^<=301/i^mouse_action^=(MOUSE_LMB_RELEASED); [set hero level by arrows]
!!VR(lv:y):Vz21;

!!if&i^mouse_item^=300;
  !!VR(lv):-1;
  !!VR(isLvUp:y):S(FALSE);
!!el&i^mouse_item^=301;
  !!VR(lv):+1;
  !!VR(isLvUp):S(TRUE);
!!en;

!!FU(trainer_GetFixedLv):P(lv)/(isLvUp)/?(lvFixed:y);

!!FU7780015:P(lvFixed);
!!VRi^trainer_heroLv^:S(lvFixed);

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!FU&i^mouse_item^<>1/i^mouse_item^<>147:E;;
!!HEi^trainer_hero^:E?(exp:y)/?(lv:y);
!!SN:T^trainer.heroLvDesc^/?(heroLvDesc:z)/^lv^/(lv);
!!IF:Q1/(PIC_TYPE_EXPERIENCE)/(exp)/4^%(heroLvDesc)^;

!?FU7780016; Custom levels
; x1 - level
; ?x2 - exp (don't use y-vars in get syntax)
!!UN:J1/?y1/d J1/12/?y2 J1/x1/?y3 J1/y1/?y4;
!!VRx2:Sy3;
!!FU&x1<=12:E;
!!VRx2:Sy2;
!!VRy4:S13;
!!UN:J1/y4/?y5; #5
!!VRx2:+y5;
!!VRy4:+1;
!!SN&y4<=x1:G5;
!!UN:J1/y1/?y5;

*********************End Hero Level***************************

*********************Primary Skills***************************

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>219/i^mouse_item^<228/i^mouse_action^=(MOUSE_LMB_RELEASED); buttons adding priÑary skills
!!SN:W^trainer_hero^/?y1;                   [Archer - opimisation and compatiblity with prima.dll]
!!HEy1:F?y2/?y3/?y4/?y5;

!!HEy1&i^mouse_item^=220:Fd1/d/d/d;
!!HEy1&i^mouse_item^=221:Fd/d1/d/d;
!!HEy1&i^mouse_item^=222:Fd/d/d/d1;
!!HEy1&i^mouse_item^=223:Fd/d/d1/d;
!!HEy1&i^mouse_item^=224:Fd-1/d/d/d;
!!HEy1&i^mouse_item^=225:Fd/d-1/d/d;
!!HEy1&i^mouse_item^=226:Fd/d/d/d-1;
!!HEy1&i^mouse_item^=227:Fd/d/d-1/d;
!!FU7780017:Py1;

!?FU7780017;
!!HEx1:F?y1/?y2/?y3/?y4;

!!VRy5:Si^trainer_psCap^;

!!VRz16:M3/y1;
!!VRz17:M3/y2;
!!VRz18:M3/y3;
!!VRz19:M3/y4;

!!VRz16&y1>=y5/y1<=249:S^{~Red}%y1{~}^; [set cap]
!!VRz17&y2>=y5/y2<=249:S^{~Red}%y2{~}^;
!!VRz18&y3>=y5/y3<=249:S^{~Red}%y3{~}^;
!!VRz19&y4>=y5/y4<=249:S^{~Red}%y4{~}^;

!!VRz16|y1<0/y1>249:S^{~White}%y1{~}^;  [invalid values]
!!VRz17|y2<0/y2>249:S^{~White}%y2{~}^;
!!VRz18|y3<1/y3>249:S^{~White}%y3{~}^;
!!VRz19|y4<1/y4>249:S^{~White}%y4{~}^;

!!DL(TRAINER_MAIN_DLG):A141/3/z16/1 A142/3/z17/1 A143/3/z18/1 A144/3/z19/1;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!VR(flag:y):S(FALSE);                  [get clicked location]
!!VR(flag)&i^mouse_item^>=15/i^mouse_item^<=18:S1;
!!VR(flag)&i^mouse_item^>=141/i^mouse_item^<=144:S2;
!!FU&(flag)=(FALSE):E;

!!VR(psType:y)&(flag)=1:Si^mouse_item^ -15; [get primary skill type and pic type]
!!VR(psType)&(flag)=2:Si^mouse_item^ -141;
!!VR(psPicType:y):S(psType) +31;

!!HEi^trainer_hero^:F?(atk:y)/?(def:y)/?(pwr:y)/?(knl:y);

!!if&(psType)=(SKILL_ATTACK);
  !!SN:T^trainer.attack^/?z1;
  !!IF:Q1/(psPicType)/(atk)/4^%z1^;
!!el&(psType)=(SKILL_DEFENSE);
  !!SN:T^trainer.defense^/?z1;
  !!IF:Q1/(psPicType)/(def)/4^%z1^;
!!el&(psType)=(SKILL_POWER);
  !!SN:T^trainer.power^/?z1;
  !!IF:Q1/(psPicType)/(pwr)/4^%z1^;
!!el&(psType)=(SKILL_KNOWLEDGE);
  !!SN:T^trainer.knowledge^/?z1;
  !!IF:Q1/(psPicType)/(knl)/4^%z1^;
!!en;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_action^=(MOUSE_LMB_PRESSED);
!!VR(flag:y):S(FALSE);                  [get clicked location]
!!VR(flag)&i^mouse_item^>=15/i^mouse_item^<=18:S1;
!!VR(flag)&i^mouse_item^>=141/i^mouse_item^<=144:S2;
!!FU&(flag)=(FALSE):E;

!!VR(psType:y)&(flag)=1:Si^mouse_item^ -15; [get primary skill type]
!!VR(psType)&(flag)=2:Si^mouse_item^ -141;

!!SN&(psType)=(SKILL_ATTACK):T^trainer.attack^/?z2; [set up z var]
!!SN&(psType)=(SKILL_DEFENSE):T^trainer.defense^/?z2;
!!SN&(psType)=(SKILL_POWER):T^trainer.power^/?z2;
!!SN&(psType)=(SKILL_KNOWLEDGE):T^trainer.knowledge^/?z2;

!!if|(psType)=(SKILL_ATTACK)/(psType)=(SKILL_DEFENSE);
  !!VR(psMin:y):S0;
!!el;
  !!VR(psMin):S1;
!!en;

!!VR(psCap:y):Si^trainer_psCap^;

!!SN:T^trainer.titlePs^/?z4/^ps^/z2/^hero^/s^trainer_hero^;
!!SN:T^trainer.legendPs^/?z5/^ps^/z2/^min^/(psMin)/^max^/(psCap);
!!IF:D30/4/5/^^;              [get primary skill value input]
!!IF:E1/30;
!!VRz1:H1;
!!FU|-1/v1<0:E;
!!VR(psValue:y):Vz1;

!!if|(psType)=(SKILL_ATTACK)/(psType)=(SKILL_DEFENSE);
  !!VR(psValue:y):F0/(psCap);
!!el;
  !!VR(psValue):F1/(psCap);
!!en;

!!HEi^trainer_hero^&(psType)=(SKILL_ATTACK):F(psValue)/?(def:y)/?(pwr:y)/?(knl:y); [set new primary skill value]
!!HEi^trainer_hero^&(psType)=(SKILL_DEFENSE):F?(atk:y)/(psValue)/?(pwr)/?(knl);
!!HEi^trainer_hero^&(psType)=(SKILL_POWER):F?(atk)/?(def)/(psValue)/?(knl);
!!HEi^trainer_hero^&(psType)=(SKILL_KNOWLEDGE):F?(atk)/?(def:y)/?(pwr:y)/(psValue);

!!FU7780017:Pi^trainer_hero^;               [refresh dialogue]

!!VRz1:S^NwHeroLv.wav^;
!!SN:Pz1;

!?FU(trainer_GetPsCap);
!#VA(psCap:x);

!!SN:L^prima.dll^/?(primaEnabled:y);
!!VRi^trainer_psCap^&(primaEnabled)=(FALSE):S(TRAINER_PRIMARY_CAP1);
!!VRi^trainer_psCap^&(primaEnabled)<>(FALSE):S(TRAINER_PRIMARY_CAP2);

********************End primary skills*************************

********************HERO ARMY**********************************

!?FU7780018;                            [add creature to the army]
;x1 hero ID
!!HEx1:C0/x16/?(mon:y)/?(qty:y)/?(exp:y); get creatures in slot x16
!!VR(monCad:y):Sx16 +100;               [get mon cadre ID]
!!VR(hintCad:y):Sx16 +161;              [get hint text ID]
!!VR(swordCad:y):Sx16 +400;             [get ID of swords item]
!!VR(henchCad:y):Sx16 +228;             [get ID of henchman button]

!!UN:P900/?(stackExpOn:y);              [check if stack exp enabled]
!!DL(TRAINER_MAIN_DLG)&(stackExpOn)=(FALSE):A(swordCad)/4/0/1;

!!UN:P49/?(henchOn:y);
!!DL(TRAINER_MAIN_DLG)&(henchOn)=(FALSE):E(henchCad)/0;

!!if&(mon)=(NO_MON);
  !!DL(TRAINER_MAIN_DLG):A(monCad)/4/1/1;

  !!DL(TRAINER_MAIN_DLG):A(swordCad)/4/0/1;
  !!DL(TRAINER_MAIN_DLG):E(henchCad)/0;

  !!VRz30:S^^;
  !!DL(TRAINER_MAIN_DLG):A(hintCad)/3/z30/1;

  !!DL(TRAINER_MAIN_DLG):H(monCad)/z30;
  !!DL(TRAINER_MAIN_DLG):H(hintCad)/z30;[DL:H doesn't work on ^^]
  !!DL(TRAINER_MAIN_DLG):H(swordCad)/z30;
!!el;
  !!VR(monCadInd:y):S(mon) +2;
  !!DL(TRAINER_MAIN_DLG):A(monCad)/4/(monCadInd)/1;

  !!VRz3:M3/(qty);
  !!DL(TRAINER_MAIN_DLG):A(hintCad)/3/z3/1;

  !!MA:L(mon)/?(monLv:y);               [Monster level]
  !!VR(monLv):+1;                       [Add 1 to monster level]
  !!FU7780024:P(monLv)/(exp)/(qty);     [Get rank: y-20/i^Rank_stack^]
  !!FU(trainer_RefreshRank):P(swordCad);

  !!SN:T^trainer.hintMonQty^/?z34;
  !!DL(TRAINER_MAIN_DLG):H(monCad)/z34;
  !!DL(TRAINER_MAIN_DLG):H(hintCad)/z34;
  !!DL(TRAINER_MAIN_DLG):H(swordCad)/z34;

  !!DL(TRAINER_MAIN_DLG):E(henchCad)/1;
!!en;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=8/i^mouse_action^=(MOUSE_LMB_RELEASED); browse towns/right button
!!SN:W^Castle_H^/?y1;
!!SN:W^Rampart_H^/?y2;
!!SN:W^Tower_H^/?y3;
!!SN:W^Inferno_H^/?y4;
!!SN:W^Necropolis_H^/?y5;
!!SN:W^Dungeon_H^/?y6;
!!SN:W^Stronghold_H^/?y7;
!!SN:W^Fortress_H^/?y8;
!!SN:W^Conflux_H^/?y9;
!!SN:W^Neutral_1^/?y10;
!!SN:W^Neutral_2^/?y11;

!!DO7780019/83/98/1&y1=1:P14/1/158/168; castle-->rampart
!!SN&y1=1:W^Rampart_H^/1;
!!SN&y1=1:W^Castle_H^/0;

!!DO7780019/83/98/1&y2=1:P28/2/159/169; rampart-->tower
!!SN&y2=1:W^Tower_H^/1;
!!SN&y2=1:W^Rampart_H^/0;

!!DO7780019/83/98/1&y3=1:P42/3/160/169; tower-->inferno
!!SN&y3=1:W^Inferno_H^/1;
!!SN&y3=1:W^Tower_H^/0;

!!DO7780019/83/98/1&y4=1:P56/4/161/168; inferno-->necropolis
!!SN&y4=1:W^Necropolis_H^/1;
!!SN&y4=1:W^Inferno_H^/0;

!!DO7780019/83/98/1&y5=1:P70/5/162/167; necropolis-->dungeon
!!SN&y5=1:W^Dungeon_H^/1;
!!SN&y5=1:W^Necropolis_H^/0;

!!DO7780019/83/98/1&y6=1:P84/6/163/170; dungeon-->stronghold
!!SN&y6=1:W^Stronghold_H^/1;
!!SN&y6=1:W^Dungeon_H^/0;

!!DO7780019/83/98/1&y7=1:P98/7/164/171; stronghold-->fortress
!!SN&y7=1:W^Fortress_H^/1;
!!SN&y7=1:W^Stronghold_H^/0;

!!DO7780019/83/98/1&y8=1:P112/8/165/172; fortress-->conflux
!!SN&y8=1:W^Conflux_H^/1;
!!SN&y8=1:W^Fortress_H^/0;

!!DO7780019/83/98/1&y9=1:P126/9/140/173; conflux-->neutral1
!!SN&y9=1:W^Neutral_1^/1;
!!SN&y9=1:W^Conflux_H^/0;

!!DO7780019/83/98/1&y10=1:P141/9/155/156; neutral1-->neutral2
!!SN&y10=1:W^Neutral_2^/1;
!!SN&y10=1:W^Neutral_1^/0;

!!DO7780019/83/98/1&y11=1:P0/0/157/167; [Archer - neutral2-->Castle]
!!SN&y11=1:W^Castle_H^/1;
!!SN&y11=1:W^Neutral_2^/0;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=7/i^mouse_action^=(MOUSE_LMB_RELEASED); browse towns/left button
!!SN:W^Castle_H^/?y1;
!!SN:W^Rampart_H^/?y2;
!!SN:W^Tower_H^/?y3;
!!SN:W^Inferno_H^/?y4;
!!SN:W^Necropolis_H^/?y5;
!!SN:W^Dungeon_H^/?y6;
!!SN:W^Stronghold_H^/?y7;
!!SN:W^Fortress_H^/?y8;
!!SN:W^Conflux_H^/?y9;
!!SN:W^Neutral_1^/?y10;
!!SN:W^Neutral_2^/?y11;

!!DO7780019/83/98/1&y11=1:P126/9/140/173; neutral2-->neutral1
!!SN&y11=1:W^Neutral_2^/0;
!!SN&y11=1:W^Neutral_1^/1;

!!DO7780019/83/98/1&y10=1:P112/8/165/172; neutral1-->conflux
!!SN&y10=1:W^Neutral_1^/0;
!!SN&y10=1:W^Conflux_H^/1;

!!DO7780019/83/98/1&y9=1:P98/7/164/171; conflux-->fortress
!!SN&y9=1:W^Conflux_H^/0;
!!SN&y9=1:W^Fortress_H^/1;

!!DO7780019/83/98/1&y8=1:P84/6/163/170; fortress-->Stronghold
!!SN&y8=1:W^Fortress_H^/0;
!!SN&y8=1:W^Stronghold_H^/1;

!!DO7780019/83/98/1&y7=1:P70/5/162/167; Stronghold-->Dungeon
!!SN&y7=1:W^Stronghold_H^/0;
!!SN&y7=1:W^Dungeon_H^/1;

!!DO7780019/83/98/1&y6=1:P56/4/161/168; Dungeon-->Necropolis
!!SN&y6=1:W^Dungeon_H^/0;
!!SN&y6=1:W^Necropolis_H^/1;

!!DO7780019/83/98/1&y5=1:P42/3/160/169; Necropolis-->Inferno
!!SN&y5=1:W^Necropolis_H^/0;
!!SN&y5=1:W^Inferno_H^/1;

!!DO7780019/83/98/1&y4=1:P28/2/159/169; Inferno-->Tower
!!SN&y4=1:W^Inferno_H^/0;
!!SN&y4=1:W^Tower_H^/1;

!!DO7780019/83/98/1&y3=1:P14/1/158/168; Tower-->Rampart
!!SN&y3=1:W^Tower_H^/0;
!!SN&y3=1:W^Rampart_H^/1;

!!DO7780019/83/98/1&y2=1:P0/0/157/167; Rampart-->Castle
!!SN&y2=1:W^Rampart_H^/0;
!!SN&y2=1:W^Castle_H^/1;

!!DO7780019/83/98/1&y1=1:P141/9/155/156;[Archer - Castle-->Neutral2]
!!SN&y1=1:W^Castle_H^/0;
!!SN&y1=1:W^Neutral_2^/1;

!?FU7780019;
!!DL(TRAINER_MAIN_DLG):Ax16/4/x1;
!!DL(TRAINER_MAIN_DLG)&x16=97:Ax16/4/x3; set 8th level monster
!!DL(TRAINER_MAIN_DLG)&x16=98:Ax16/4/x4; set special creatures
!!DL(TRAINER_MAIN_DLG):A3/4/x2;
!!VRx1:+1;

;Right click infos
!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>82/i^mouse_item^<99/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!FU7780021:Pi^mouse_item^/1;

!?FU7780021;
;x1 click ID
;x2 right/left click difference (1/2)
!!SN:W^Castle_H^/?y1;
!!SN:W^Rampart_H^/?y2;
!!SN:W^Tower_H^/?y3;
!!SN:W^Inferno_H^/?y4;
!!SN:W^Necropolis_H^/?y5;
!!SN:W^Dungeon_H^/?y6;
!!SN:W^Stronghold_H^/?y7;
!!SN:W^Fortress_H^/?y8;
!!SN:W^Conflux_H^/?y9;
!!SN:W^Neutral_1^/?y10;
!!SN:W^Neutral_2^/?y11;

!!if|y1=1/y2=1/y3=1/y4=1/y5=1/y6=1/y7=1; Castle-Stronghold
  !!VRy20:Sx1-83;
  !!VRy20&y2=1:+14; !!VRy20&y3=1:+28; !!VRy20&y4=1:+42; !!VRy20&y5=1:+56;
  !!VRy20&y6=1:+70; !!VRy20&y7=1:+84;
  !!VRy20&y20=14/y1=1:S150;  set level 8 monsters
  !!VRy20&y20=28/y2=1:S151;
  !!VRy20&y20=42/y3=1:S152;
  !!VRy20&y20=56/y4=1:S153;
  !!VRy20&y20=70/y5=1:S154;
  !!VRy20&y20=84/y6=1:S155;
  !!VRy20&y20=98/y7=1:S156;
  !!VRy20&y20=112/y8=1:S157;
  !!VRy20&y20=15/y1=1:S(MON_BALLISTA);
  !!VRy20&y20=29/y2=1:S(MON_FIRST_AID_TENT);
  !!VRy20&y20=43/y3=1:S(MON_AMMO_CART);
  !!VRy20&y20=57/y4=1:S(MON_AMMO_CART);
  !!VRy20&y20=71/y5=1:S(MON_FIRST_AID_TENT);
  !!VRy20&y20=85/y6=1:S(MON_BALLISTA);
  !!VRy20&y20=99/y7=1:S(MON_EMISSARY_OF_WAR);
  !!UN&y20>-1/x2=1:N3/z3/y20/0;  get creature name
  !!IF&y20>-1/x2=1:Q1/21/y20/4^%Z3^;  display pic and name
!!en;

!!if&y8=1;                              [Archer - fortress mess]
  !!VRv2:C98/99/100/101/104/105/106/107/102/103/108/109/110/111; [fortress ID table]
  !!VRy5:Sx1-81;
  !!VRy20:Svy5;
  !!VRy20&x1=97:S157;                     [Hell Hydra]
  !!VRy20&x1=98:S(MON_EMISSARY_OF_PEACE);
  !!UN&y20>-1/x2=1:N3/z3/y20/0;
  !!IF&y20>-1/x2=1:Q1/21/y20/4^%Z3^;
!!en;

!!if&y9=1; conflux mess
  !!VRv2:C118/119/112/127/115/123/114/129/113/125/120/121/130/131; conflux ID table
  ;ID 83-97
  !!VRy5:Sx1-81;
  !!VRy20:Svy5;
  !!VRy20&x1=97:S158; sacred phoenix
  !!VRy20&x1=98:S(MON_EMISSARY_OF_MANA);
  !!UN&y20>-1/x2=1:N3/z3/y20/0;
  !!IF&y20>-1/x2=1:Q1/21/y20/4^%Z3^;
!!en;

!!if&y10=1; neutral1 creatures
  !!VRy20:Sx1+47; index to neutrals
  !!VRy20&x1=83:S116; gold golem
  !!VRy20&x1=84:S117; diamond golem
  !!VRy20&x1=98:S(MON_EMISSARY_OF_LORE);
  !!UN&y20>-1/x2=1:N3/z3/y20/0;
  !!IF&y20>-1/x2=1:Q1/21/y20/4^%Z3^;
!!en;

!!if&y11=1; neutral2 creatures
  !!VRv2:C159/164/165/166/167/168/169/170/171/172/173/192/193/194/195/196;
  !!VRy5:Sx1-81;
  !!VRy20:Svy5;
  !!UN&x2=1:N3/z3/y20/0;
  !!IF&x2=1:Q1/21/y20/4^%Z3^;
!!en;

!!if&x2=2; if transfer activated
  !!SN:W^Transfer_H_^/y20;
!!en;

;left-click transfers creatures from pool to hero slots
!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>82/i^mouse_item^<99/i^mouse_action^=(MOUSE_LMB_PRESSED); [Archer - optimization and Emissaries/Warmachines feature]
!!SN:W^trainer_hero^/?y1;
!!FU7780021:Pi^mouse_item^/2;
!!SN:W^Transfer_H_^/?y3;
!!UN&y3>-1:N3/z3/y3/1;

!!if&y3>(NO_MON)/y3<>(MON_BALLISTA)/y3<>(MON_FIRST_AID_TENT)/y3<>(MON_AMMO_CART)/y3<>(MON_EMISSARY_OF_WAR)/y3<>(MON_EMISSARY_OF_PEACE)/y3<>(MON_EMISSARY_OF_MANA)/y3<>(MON_EMISSARY_OF_LORE);
  !!SN:T^trainer.titleAddMon^/?z6/^mon^/z3/^hero^/s^trainer_hero^;
  !!SN:T^trainer.legendAddMon^/?z7;
  !!IF:D55/6/7/0/0/0/0/0;
  !!IF:E1/55;
  !!VRz1:H1; **check if text entered, flag 1=1 if yes
  !!FU|-1/v1<0:E;

  !!VRy7:Vz1;
  !!VRy7:F0/(INT_MAX);                  [restrain value]
  !!FU&y7=0:E;

  !!HEy1:C2/y3/y7/1;
  !!DL(TRAINER_MAIN_DLG):Ay4/4/y3/1;
  !!DO7780018/0/6/1:Py1;                [refresh hero army]
!!en;

!!SN:T^trainer.addMonSpec^/?z8/^mon^/z3/^hero^/s^trainer_hero^;

!!if&y3>=(MON_BALLISTA)/y3<=(MON_AMMO_CART);
  !!IF:Q1/(PIC_TYPE_MONSTER)/y3/2^%z8^;
  !!HEy1&1/y3=(MON_BALLISTA):A1/(ART_BALLISTA)/(ART_SLOT_BALLISTA);
  !!HEy1&1/y3=(MON_FIRST_AID_TENT):A1/(ART_FIRST_AID_TENT)/(ART_SLOT_FIRST_AID_TENT);
  !!HEy1&1/y3=(MON_AMMO_CART):A1/(ART_AMMO_CART)/(ART_SLOT_AMMO_CART);
!!en;

!!if&y3>=(MON_EMISSARY_OF_WAR)/y3<=(MON_EMISSARY_OF_LORE);
  !!IF:Q1/(PIC_TYPE_MONSTER)/y3/2^%z8^;
  !!HEy1&1:C2/y3/1/1;
  !!DL(TRAINER_MAIN_DLG):Ay4/4/y3/1;
  !!DO7780018/0/6/1:Py1;                [refresh hero army]
!!en;

!?FU(trainer_RefreshRank);              [x1 = id of sword item]
!!if&i^Rank_stack^>=10;
  !!DL(TRAINER_MAIN_DLG):Ax1/4/1/0; set
!!el;
  !!DL(TRAINER_MAIN_DLG):Ax1/4/0/0;                    [Archer - remove sword if lower than Ace]
!!en;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=124/i^mouse_action^=(MOUSE_LMB_RELEASED); [custom monsters]
; Get the last monster ID
; Warning: Need to be defined in every mod that has extended monster ID
!!FU(GetMaxMonsterId):P?(lastMon:y);

!!SN:T^trainer.titleCustMon^/?z2/^hero^/s^trainer_hero^;
!!SN:T^trainer.legendCustMon^/?z3/^max^/(lastMon);
!!IF:D30/2/3/^^;
!!IF:E1/30;                             [1 = index of v, 30 = number of extended dialog]
!!VRz1:H1;                              [check if text entered, flag 1=1 if yes]
!!FU|-1/v1<0:E;                         [end function if empty or Esc]
!!VR(mon:y):Vz1;

!!VR(firstCharIsNum:y):S(FALSE);
!!UN:C9597928/1/?(firstChar:y);
!!VR(firstCharIsNum)&(firstChar)>=48/(firstChar)<=57:S(TRUE);

!!if&(firstCharIsNum)/(mon)>=(MON_FIRST)/(mon)<=(lastMon);
  !!FU(trainer_addMonInputQty):P(mon);
  !!DO7780018/0/6/1:Pi^trainer_hero^;   [refresh hero army]
  !!FU:E;
!!en;

!!re i/(MON_FIRST)/(lastMon);
  !!SN:H^monname^/i/0/?z2;
  !!SN:H^monname^/i/1/?z3;

  !!br|z1=z2/z1=z3;
!!en;

!!if&i<=(lastMon);

  !!FU(trainer_addMonInputQty):Pi;

  !!DO7780018/0/6/1:Pi^trainer_hero^;   [refresh hero army]
!!el;
  !!SN:T^trainer.noMon^/?z2;
  !!IF:M^%z2^;
!!en;

!?FU(trainer_addMonInputQty);
!#VA(mon:x);
!!SN:H^monname^/(mon)/1/?z4;

!!SN:T^trainer.titleCustMonQty^/?z2/^mon^/z4/^hero^/s^trainer_hero^;
!!SN:T^trainer.legendCustMonQty^/?z3;
!!IF:D30/2/3/^^;
!!IF:E1/30;                             [1 = index of v, 30 = number of extended dialog]
!!VRz1:H1;                              [check if text entered, flag 1=1 if yes]
!!FU|-1/v1<0:E;                         [end function if empty or Esc]
!!VR(qty:y):Vz1;

!!VR(qty):F0/(INT_MAX);

!!HEi^trainer_hero^&(qty)>0:C2/(mon)/(qty)/1;

****************************End Army**************************************

*****************************Artifacts************************************
;526-540 artifacts graphics
;426-440 artifacts cadres
!?FU7780022;
; x1 - hero
!!VRy1:Sx16-100;
!!DL(TRAINER_MAIN_DLG):Ay1/4/0/1; set cadre to blank
!!DL(TRAINER_MAIN_DLG):Ax16/4/x2/1; start with x2th cadre
!!VRy2:Sx16-519+x3;
!!HEx1:A2/y2/?y3/?y4;
!!DL(TRAINER_MAIN_DLG)|y3>0/y4>0:Ay1/4/1/1;
!!VRx2:+1;  increment +1

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=108/i^mouse_action^=(MOUSE_LMB_RELEASED); arts button right
!!SN:W^Arts_V_1^/?y1;
!!SN:W^Arts_V_2^/?y2;
!!SN:W^Arts_V_3^/?y3;
!!SN:W^Arts_V_4^/?y4;
!!SN:W^Arts_V_5^/?y5;
!!SN:W^Arts_V_6^/?y6;
!!SN:W^Arts_V_7^/?y7;
!!SN:W^Arts_V_8^/?y8;
!!SN:W^Arts_V_9^/?y9;
!!SN:W^Arts_V_10^/?y10;
!!SN:W^Arts_V_11^/?y11;
!!SN:W^trainer_hero^/?y12;
!*IF:M^%Y1=y1, %Y2=y2, %Y3=y3, %Y4=y4, %Y5=y5, %Y6=y6, %Y7=y7, %Y8=y8, %Y9=y9, %Y10=y10, %Y11=y11^;

!!DO7780022/526/540/1&y1=1:Py12/22/15;
!!SN&y1=1:W^Arts_V_2^/1;
!!SN&y1=1:W^Arts_V_1^/0;

!!DO7780022/526/540/1&y2=1:Py12/37/30;
!!SN&y2=1:W^Arts_V_3^/1;
!!SN&y2=1:W^Arts_V_2^/0;

!!DO7780022/526/540/1&y3=1:Py12/52/45;
!!SN&y3=1:W^Arts_V_4^/1;
!!SN&y3=1:W^Arts_V_3^/0;

!!DO7780022/526/540/1&y4=1:Py12/67/60;
!!SN&y4=1:W^Arts_V_5^/1;
!!SN&y4=1:W^Arts_V_4^/0;

!!DO7780022/526/540/1&y5=1:Py12/82/75;
!!SN&y5=1:W^Arts_V_6^/1;
!!SN&y5=1:W^Arts_V_5^/0;

!!DO7780022/526/540/1&y6=1:Py12/97/90;
!!SN&y6=1:W^Arts_V_7^/1;
!!SN&y6=1:W^Arts_V_6^/0;

!!DO7780022/526/540/1&y7=1:Py12/112/105;
!!SN&y7=1:W^Arts_V_8^/1;
!!SN&y7=1:W^Arts_V_7^/0;

!!DO7780022/526/540/1&y8=1:Py12/127/120;
!!SN&y8=1:W^Arts_V_9^/1;
!!SN&y8=1:W^Arts_V_8^/0;

!!DO7780022/526/540/1&y9=1:Py12/142/135;
!!SN&y9=1:W^Arts_V_10^/1;
!!SN&y9=1:W^Arts_V_9^/0;

!!DO7780022/526/540/1&y10=1:Py12/157/150;
!!SN&y10=1:W^Arts_V_11^/1;
!!SN&y10=1:W^Arts_V_10^/0;

!!DO7780022/526/540/1&y11=1:Py12/7/0;
!!SN&y11=1:W^Arts_V_1^/1;
!!SN&y11=1:W^Arts_V_11^/0;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=107/i^mouse_action^=(MOUSE_LMB_RELEASED); arts button left
!!SN:W^Arts_V_1^/?y1;
!!SN:W^Arts_V_2^/?y2;
!!SN:W^Arts_V_3^/?y3;
!!SN:W^Arts_V_4^/?y4;
!!SN:W^Arts_V_5^/?y5;
!!SN:W^Arts_V_6^/?y6;
!!SN:W^Arts_V_7^/?y7;
!!SN:W^Arts_V_8^/?y8;
!!SN:W^Arts_V_9^/?y9;
!!SN:W^Arts_V_10^/?y10;
!!SN:W^Arts_V_11^/?y11;
!!SN:W^trainer_hero^/?y12;
!*IF:M^%Y1=y1, %Y2=y2, %Y3=y3, %Y4=y4, %Y5=y5, %Y6=y6, %Y7=y7, %Y8=y8, %Y9=y9, %Y10=y10, %Y11=y11^;

!!DO7780022/526/540/1&y11=1:Py12/142/135;
!!SN&y11=1:W^Arts_V_11^/0;
!!SN&y11=1:W^Arts_V_10^/1;

!!DO7780022/526/540/1&y10=1:Py12/127/120;
!!SN&y10=1:W^Arts_V_10^/0;
!!SN&y10=1:W^Arts_V_9^/1;

!!DO7780022/526/540/1&y9=1:Py12/112/105;
!!SN&y9=1:W^Arts_V_9^/0;
!!SN&y9=1:W^Arts_V_8^/1;

!!DO7780022/526/540/1&y8=1:Py12/97/90;
!!SN&y8=1:W^Arts_V_8^/0;
!!SN&y8=1:W^Arts_V_7^/1;

!!DO7780022/526/540/1&y7=1:Py12/82/75;
!!SN&y7=1:W^Arts_V_7^/0;
!!SN&y7=1:W^Arts_V_6^/1;

!!DO7780022/526/540/1&y6=1:Py12/67/60;
!!SN&y6=1:W^Arts_V_6^/0;
!!SN&y6=1:W^Arts_V_5^/1;

!!DO7780022/526/540/1&y5=1:Py12/52/45;
!!SN&y5=1:W^Arts_V_5^/0;
!!SN&y5=1:W^Arts_V_4^/1;

!!DO7780022/526/540/1&y4=1:Py12/37/30;
!!SN&y4=1:W^Arts_V_4^/0;
!!SN&y4=1:W^Arts_V_3^/1;

!!DO7780022/526/540/1&y3=1:Py12/22/15;
!!SN&y3=1:W^Arts_V_3^/0;
!!SN&y3=1:W^Arts_V_2^/1;

!!DO7780022/526/540/1&y2=1:Py12/7/0;
!!SN&y2=1:W^Arts_V_2^/0;
!!SN&y2=1:W^Arts_V_1^/1;

!!DO7780022/526/540/1&y1=1:Py12/157/150;
!!SN&y1=1:W^Arts_V_1^/0;
!!SN&y1=1:W^Arts_V_11^/1;

;infos when right-click
!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>425/i^mouse_item^<441/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!FU7780023:Pi^mouse_item^/0;

!?FU7780023;
!!SN:W^Arts_V_1^/?y1;
!!SN:W^Arts_V_2^/?y2;
!!SN:W^Arts_V_3^/?y3;
!!SN:W^Arts_V_4^/?y4;
!!SN:W^Arts_V_5^/?y5;
!!SN:W^Arts_V_6^/?y6;
!!SN:W^Arts_V_7^/?y7;
!!SN:W^Arts_V_8^/?y8;
!!SN:W^Arts_V_9^/?y9;
!!SN:W^Arts_V_10^/?y10;
!!SN:W^Arts_V_11^/?y11;
!!SN:W^trainer_hero^/?y12;

!!VRy13&y1=1:Sx1-419;
!!VRy13&y2=1:Sx1-404;
!!VRy13&y3=1:Sx1-389;
!!VRy13&y4=1:Sx1-374;
!!VRy13&y5=1:Sx1-359;
!!VRy13&y6=1:Sx1-344;
!!VRy13&y7=1:Sx1-329;
!!VRy13&y8=1:Sx1-314;
!!VRy13&y9=1:Sx1-299;
!!VRy13&y10=1:Sx1-284;
!!VRy13&y11=1:Sx1-269;
!!VRy13&y13=171:S2;
!!FU|y13=144/y13=145:E;
!!SN:H^art^/y13/0/?z3;
!!SN:H^art^/y13/1/?z5;
!!HEy12:B0/?z4;
!!IF&x2<1:Q1/8/y13/4^%z5^; show on right click

!!if&x2>0;
  !!SN:T^trainer.heroArt^/?z2/^art^/z3/^hero^/z4;
  !!IF:Q1/8/y13/2^%z2^;
  !!FU&-1:E;
  !!HEy12:A4/y13;                       [auto equipped]
  !!VRy1:Sx1;
  !!DL(TRAINER_MAIN_DLG):Ay1/4/1/0;
  !!FU(trainer_PlayArtSound):P;
!!en;

!?FU(trainer_PlayArtSound);
!!VR(randNum:y):S1 R6;
!!VR(sound:z):S^pickup0%(randNum).wav^;
!!SN:P(sound);

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>425/i^mouse_item^<441/i^mouse_action^=(MOUSE_LMB_PRESSED); give artifacts to the hero
!!FU7780023:Pi^mouse_item^/1;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=125/i^mouse_action^=(MOUSE_LMB_RELEASED); [custom artifacts]
; Get the last artifact ID
; Warning: GetMaxArtifactId has to be defined in mods! It is not part of EEF
!!FU(GetMaxArtifactId):P?(lastArt:y);
!!VR(lastArt):F(ART_LAST_WOG)/1000;     [compatiblity settings]

!!SN:T^trainer.titleCustArt^/?z2/^hero^/s^trainer_hero^;
!!SN:T^trainer.legendCustArt^/?z3/^max^/(lastArt);
!!IF:D30/2/3/^^;
!!IF:E1/30;                             [1 = index of v, 30 = number of extended dialog]
!!VRz1:H1;                              [check if text entered, flag 1=1 if yes]
!!FU|-1/v1<0:E;                         [end function if empty or Esc]
!!VR(art:y):Vz1;

!!VR(firstCharIsNum:y):S(FALSE);
!!UN:C9597928/1/?(firstChar:y);
!!VR(firstCharIsNum)&(firstChar)>=48/(firstChar)<=57:S(TRUE);

!!if&(firstCharIsNum)/(art)>=(ART_FIRST)/(art)<=(lastArt);
  !!HEi^trainer_hero^:A4/(art);

  !!FU(trainer_RefreshArts):P;          [refresh artifacts]
  !!FU(trainer_ShowArtDesc):P(art);
  !!FU(trainer_PlayArtSound):P;

  !!FU:E;
!!en;

!!re i/(ART_FIRST)/(lastArt);
  !!SN:H^art^/i/0/?z2;

  !!br&z1=z2;
!!en;

!!if&i<=(lastArt);
  !!HEi^trainer_hero^:A4/i;

  !!FU(trainer_RefreshArts):P;          [refresh artifacts]
  !!FU(trainer_ShowArtDesc):Pi;
  !!FU(trainer_PlayArtSound):P;
!!el;
  !!SN:T^trainer.noArt^/?z2;
  !!IF:M^%z2^;
!!en;

!?FU(trainer_RefreshArts);
!!re i/1/11;
  !!br&i^Arts_V_%i^;                    [check page]
!!en;

!!VR(x2:y):Si -1 *15 +7;
!!VR(x3:y):Si -1 *15;
!!DO7780022/526/540/1:Pi^trainer_hero^/(x2)/(x3);

!?FU(trainer_ShowArtDesc);
!#VA (art:x);

!!SN:H^art^/(art)/1/?(artDesc:z);
!!IF:Q1/(PIC_TYPE_ART)/(art)/1^%(artDesc)^;

***************************End artifacts**********************************

*********************Give movement, mana and reveal map********************
;movement
!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=32/i^mouse_action^=(MOUSE_LMB_RELEASED);
!!SN:W^trainer_hero^/?y10;
!!HEy10:B0/?z3;
!!SN:T^trainer.titleMov^/?z6/^hero^/z3;
!!SN:T^trainer.legendMov^/?z7;

!!IF:D55/6/7/0/0/0/0/0;
!!IF:E1/55;
!!VRz1:H1; **check if text entered, flag 1=1 if yes
!!FU|-1/v1<0:E;

!!VRy2:Vz1;
!!VRy2&y2<>0:F-20000000/20000000;       [restrain value (INT_MAX)/100]
!!VRy2&y2<>0:*100;
!!HEy10&y2<>0:Wdy2/1; add movement without redraw
!!HEy10&y2<>0:W?y30/1;                  [restrain value, remove all movement points if 0 was input or current movements is negative]
!!HEy10|y2=0/y30<0:W0/1;
!!HEy10:G?y11 W?y12;
!!DL(TRAINER_MAIN_DLG)&y12<110:A30/4/0/1; set frames for movement def empty
!!DL(TRAINER_MAIN_DLG)&y12<500/y12>109:A30/4/1/1;  few
!!DL(TRAINER_MAIN_DLG)&y11=y12:A30/4/2/1;  normal
!!DL(TRAINER_MAIN_DLG)&y12>y11:A30/4/3/1;  extra
!!VRz1:S^Horse00.wav^;
!!SN:Pz1;

; Mana
!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=33/i^mouse_action^=(MOUSE_LMB_RELEASED);
!!SN:W^trainer_hero^/?y1;
!!HEy1:B0/?z3;
!!SN:T^trainer.titleMana^/?z6/^hero^/z3;
!!SN:T^trainer.legendMana^/?z7;

!!IF:D55/6/7/0/0/0/0/0;
!!IF:E1/55;
!!VRz1:H1; **check if text entered, flag 1=1 if yes
!!FU|-1/v1<0:E;
!!VRy2:Vz1;

!!if&y2=0;
  !!HEy1:I0/1;                          [remove all spell points if 0 was input]
!!el;
  !!HEy1:I?y30/1;
  !!VRy3:Sy30 +y2;
  !!VRy3:F0/(BITS_15_MASK);             [restrain value]
  !!HEy1:Iy3/1;
!!en;

!!VRz1:S^star2.wav^;
!!SN:Pz1;

!!HEy1:Fd/d/d/?y10; get knowledge
!!HEy1:I?y11/1;    get mana
!!VRy13:Sy10*10; match knowledge to mana
!!HEy1:S24/?y12; get intelligence rank %25/%50/%100

!!if&y12>0;
  !!VRy14&y12=1:Sy13:4;
  !!VRy13&y12=1:+y14;
  !!VRy14&y12=2:Sy13:2;
  !!VRy13&y12=2:+y14;
  !!VRy13&y12=2:*2;
!!en; y13 knowledge, y11 mana

!!DL(TRAINER_MAIN_DLG)&y11<5:A31/4/0/1; if mana below 5, empty frame
!!DL(TRAINER_MAIN_DLG)&y11>4/y11<y13:A31/4/1/1;
!!DL(TRAINER_MAIN_DLG)&y11=y13:A31/4/2/1;
!!DL(TRAINER_MAIN_DLG)&y11>y13:A31/4/3/1;

;Reveal map
!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=29/i^mouse_action^=(MOUSE_LMB_RELEASED);
!!VRz1:S^^;
!!UN:A53/9/z1; spyglass name is empty

!!if&i^trainer_player^=(NO_PLAYER);
  !!SN:T^trainer.revealNeut^/?z3;
  !!IF:M^%z3^;
  !!FU:E;
!!en;

!!SN:T^trainer.reveal^/?z2/^colour^/s^trainer_player^;
!!IF:Q1/8/53/2^%z2^;
!!FU&-1:E;

!!UN:X?i/?j; get map size
!!VRv2&i=36:C18/25;
!!VRv2&i=72:C36/50;
!!VRv2&i=108:C54/80;
!!VRv2&i=144:C77/110;
!!VRv2&i>144:C126/175;
!!UN:Sv2/v2/0/i^trainer_player^/v3;
!!UN&j>0:Sv2/v2/1/i^trainer_player^/v3;
!!UN:A53/9/0;  restores spyglass name

!!VRz1:S^Lighthouse.wav^;
!!SN:Pz1;

*********************End movement, mana and reveal map*************************

*******************Give any rank to the creatures******************************
;UN:P900/0/1  0 experience disabled / 1 enabled
!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>153/i^mouse_item^<161/i^mouse_action^=(MOUSE_LMB_RELEASED);
!!UN:P900/?(stackExpOn:y); check if stack exp enabled

!!if&(stackExpOn)=(FALSE);
  !!SN:T^trainer.rankOff^/?z2;
  !!IF:M^%z2^;
  !!FU:E;
!!en;

!!SN:W^trainer_hero^/?(hero:y);
!!VR(slot:y):Si^mouse_item^ -154; get hero slot
!!HE(hero):C0/(slot)/?(mon:y)/?(qty:y)/?(exp:y); y5 stack experience

!!if&(mon)<=(NO_MON);
  !!SN:T^trainer.rankNoArmy^/?z3;
  !!IF:M^%z3^;
  !!FU:E;
!!en;

!!MA:L(mon)/?(lv:y); [Monster level (0..6)]
!!VR(lv):+1; [Add 1 to monster level: y6]
!!FU7780024:P(lv)/(exp)/(qty); [Get rank: y-20]

!!SN&(qty)<=1:H^monname^/(mon)/0/?z6;
!!SN&(qty)>1:H^monname^/(mon)/1/?z6;

!!SN:T^trainer.titleRank^/?z4/^mon^/z6;
!!SN:T^trainer.legendRank^/?z5;
!!IF:D30/4/5/^^;                        [Archer - set to any rank]
!!IF:E1/30;                             [1 = index of v, 30 = number of extended dialog]
!!VRz1:H1;                              [check if text entered, flag 1=1 if yes]
!!FU|-1/v1<0:E;

!!VR(rankNew:y):Vz1;
!!VR(rankNew):F0/11;

!!if&(mon)<=(BITS_8_MASK);
  !!HE(hero):C0/(slot)/(mon)/(qty)/(rankNew)/12; [12 - mode for setting rank]
!!el;
  !!SN:E7503792/1/(mon)/(rankNew)/0;    [Hawaiing - export exp required for particualr creature/rank]
  !!HE(hero):C0/(slot)/(mon)/(qty)/v1/2;[2 - mode for setting exp]
!!en;

!!VR(hintCad:y):S(slot) +400; get item ID
!!VRi^Rank_stack^:S(rankNew);
!!FU(trainer_RefreshRank):P(hintCad);

!!VRz1:S^recruit.wav^;
!!SN:Pz1;

!?FU7780024; thx Jim Vogan
;[Get rank of stack: y-20]
;[x1=monster level (1..7), x2=current experience, x3=monster number]
!!VRe1:S2 :5 +8; [e1=8.4]
!!VRx1&x1<=0:S1;                        [restrain value]
!!VRy1:Sx2 :x1; [Base experience for level 1..7 creatures: y1]
!!VRy1&x3>=150/x3<=163:Sx2 :e1; [Base exp. for level 8 creatures: y1]
!!VRy-20&y1<1000:S0; [Rank 0]
!!VRy-20&y1>=1000/y1<2000:S1; [Rank 1]
!!VRy-20&y1>=2000/y1<3200:S2; [Rank 2]
!!VRy-20&y1>=3200/y1<4600:S3; [Rank 3]
!!VRy-20&y1>=4600/y1<6200:S4; [Rank 4]
!!VRy-20&y1>=6200/y1<8000:S5; [Rank 5]
!!VRy-20&y1>=8000/y1<10000:S6; [Rank 6]
!!VRy-20&y1>=10000/y1<12200:S7; [Rank 7]
!!VRy-20&y1>=12200/y1<14700:S8; [Rank 8]
!!VRy-20&y1>=14700/y1<17500:S9; [Rank 9]
!!VRy-20&y1>=17500:S10; [Rank 10]
!!SN:W^Rank_stack^/y-20; [store stack rank in SN:W]

***********************end experience***********************************

************************Change creatures quantity****************************

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_action^=(MOUSE_LMB_PRESSED);
!!VR(monArea:y):S(FALSE);
!!VR(monArea)&i^mouse_item^>=161/i^mouse_item^<=167:S1;
!!VR(monArea)&i^mouse_item^>=100/i^mouse_item^<=106:S2;
!!VR(monArea)&i^mouse_item^>=400/i^mouse_item^<=406:S3;
!!FU&(monArea)=(FALSE):E;                           [exit if not target areas]

!!SN:W^trainer_hero^/?(hero:y); get Hero
!!VR(slot:y)&(monArea)=1:Si^mouse_item^ -161; get slot
!!VR(slot)&(monArea)=2:Si^mouse_item^ -100;
!!VR(slot)&(monArea)=3:Si^mouse_item^ -400;

!!VR(hintCad:y):S(slot) +161; get hint ID

!!HE(hero):C0/(slot)/?(mon:y)/?(qty:y)/?(exp:y);
!!FU&(mon)=(NO_MON):E; exit if no creatures

!!SN&(qty)<=1:H^monname^/(mon)/0/?z2;
!!SN&(qty)>1:H^monname^/(mon)/1/?z2;

!!SN:T^trainer.titleMonQty^/?z6/^mon^/z2;
!!SN:T^trainer.legendMonQty^/?z7;
!!IF:D55/6/7/0/0/0/0/0;
!!IF:E1/55;
!!VRz1:H1; **check if text entered, flag 1=1 if yes
!!FU|-1/v1<0:E; exit if nothing entered

!!VR(input:y):Vz1;
!!VR(input):F0/(INT_MAX);                    [restrain value]

!!if&(input)<=0;
  !!VR(monCad:y):S(slot) +100;
  !!DL(TRAINER_MAIN_DLG):A(monCad:y)/4/1/1;                 [set transparent cadre if no mon]

  !!VR(henchCad:y):S(slot) +228;
  !!DL(TRAINER_MAIN_DLG):E(henchCad)/0;

  !!VR(swordCad:y):S(slot) +400;
  !!DL(TRAINER_MAIN_DLG):A(swordCad)/4/0/1;

  !!VRz30:S^^;
  !!DL(TRAINER_MAIN_DLG):A(hintCad)/3/z30/1;

  !!DL(TRAINER_MAIN_DLG):H(monCad)/z30;
  !!DL(TRAINER_MAIN_DLG):H(hintCad)/z30;[DL:H doesn't work on ^^]
  !!DL(TRAINER_MAIN_DLG):H(swordCad)/z30;

  !!HE(hero)&(input)=0:C0/(slot)/-1/-1;                [remove stack]
!!el;
  !!VR(monCadInd:y):S(mon) +2;          [fixed monster cadre index]
  !!HE(hero)&(input)>0:C0/(slot)/(mon)/(input)/(exp)/2; [set creatures with original exp]
  
  !!VRz3:M3/(input);
  !!DL(TRAINER_MAIN_DLG):A(hintCad)/3/z3/1;
!!en;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!VR(flag:y):S(FALSE);
!!VR(flag)&i^mouse_item^>=161/i^mouse_item^<=167:S1;
!!VR(flag)&i^mouse_item^>=100/i^mouse_item^<=106:S2;
!!VR(flag)&i^mouse_item^>=400/i^mouse_item^<=406:S3;
!!FU&(flag)=0:E;                           [exit if not target areas]

!!VR(slot:y)&(flag)=1:Si^mouse_item^ -161;
!!VR(slot)&(flag)=2:Si^mouse_item^ -100;
!!VR(slot)&(flag)=3:Si^mouse_item^ -400;

!!FU(trainer_RMBMonInfo):P0/i^trainer_hero^/(slot)/0/1;

!?FU(trainer_RMBMonInfo); OPEN CREATURE FROM HERO SLOT WINDOW
;  Master Of Puppets
; Convention - thiscall
; x1 = 0
; x2 - HE:N
; x3 - slot
; x4 - Dismiss button: 1 - present, 0 - absent
; x5 - close the dialog on mouse release: 1 - yep, 0 - nope
!!UN:C6933756/4/?y5;
!!OW:C?y2;
!!VRy1:Sy2*360;
!!VRy5:-y1;
!!UN:C6919480/4/?y10;

!!if&x1=0;
 !!HE-1&x2=-1:N?x2;
 !!VRy1:Sx2*1170+y5+3041;
 !!VRy3:Sx3*4+y1;
 !!UN:Cy3/4/<0;
 !!FU&1:E;

 !!VRy3:Sy1-145;
 !!SN:E5007632/2/y10/y1/x3/y3/0/119/20/x4/x5;
!!en;

*********************************end creatures number******************

*******************************Commander*********************************

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=111/i^mouse_action^=(MOUSE_LMB_RELEASED);
!!UN:P3/?(cmdOn:y);

!!if&(cmdOn)=1;
  !!SN:T^trainer.cmdOff^/?z1;
  !!IF:M^%z1^;

  !!FU:E;
!!en;

!!DL551:N^trainer.txt^;
!!SN:W^trainer_hero^/?(cmd:y);
!!CO(cmd):T?(type:y);
!!CO(cmd):D?(isDead:y);                 [revive the commander if dead]

!!if&(isDead);                          [new syntax works?]
  !!CO(cmd):D0;
  !!SN:T^trainer.cmdRevived^/?z2;
  !!IF:M^%z2^;
!!en;

!!CO(cmd):E?(isRecruited:y);            [recruit a commander if there is none]

!!if&(isRecruited)=(FALSE);
  !!CO(cmd):E1;
  !!SN:T^trainer.cmdNew^/?z3/^hero^/s^trainer_hero^;
  !!IF:M^%z3^;
!!en;

!!DO7780025/0/5/1:P(cmd);
!!FU(trainer_RefreshCmdArt):P;          [refresh commander artifacts (global)]
!!DO7780027/0/8/1:P(type);
!!DL551:A13/4/(type)/1; set correct commander to display

!!CO(cmd):X2/?(lv:y);
!!VRi^trainer_cmdLv^:S(lv);
!!FU(trainer_RefreshCmdLv):P(lv);

!!DL551:S1;

!?FU7780027;
;x1 commander ID
!!VRy1:Sx16+31; get cadre ID
!!DL551:Ay1/4/x16/1;
!!DL551&x1=x16:Ay1/4/9/1; set blank
!!DL551:A13/4/x1/1;

!!VRy30:Sx1 +174;
!!SN:H^monname^/y30/0/?z4;
!!SN:T^trainer.cmdClass^/?z5/^cmd^/z4;
!!DL551:A59/3/z5/1;

!?FU7780025;
;x1 commander ID
!!COx1:Sx16/?y1;
!!VRy2:Sx16+4; got skill cadre ID
!!DL551&y1<1:Ay2/4/x16/1; set cadre x16 if skill not known
!!VRy3:Sx16+6; if skills is known
!!DL551&y1>0:Ay2/4/y3/1;
!!VRy5:Sx16+40; get dynamic bar ID
!!VRy1&y1>5:S5; set to maximum 5th frame
!!DL551:Ay5/4/y1/1;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^>=46/i^mouse_item^<=51/i^mouse_action^=(MOUSE_LMB_RELEASED); [increase skills]
!!VR(ps:y):Si^mouse_item^-46; get skill ID
!!VR(cmd:y):Si^trainer_hero^;
!!CO(cmd):S(ps)/?(lv:y);
!!FU&(lv)>=5:E; exit if already grand master

!!CO(cmd):S(ps)/d1; set bonus
!!CO(cmd)&(ps)=4:S6/d1;  set magic resistance
!!DO7780025/0/5/1:P(cmd);

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^>=116/i^mouse_item^<=121/i^mouse_action^=(MOUSE_LMB_RELEASED); [decrease skills]
!!VR(ps:y):Si^mouse_item^ -116; get skill ID
!!VR(cmd:y):Si^trainer_hero^;
!!CO(cmd):S(ps)/?(lv:y);
!!FU&(lv)=0:E; exit if no level

!!CO(cmd):S(ps)/d-1; set bonus
!!CO(cmd)&(ps)=4:S6/d-1;  set magic resistance
!!DO7780025/0/5/1:P(cmd);              [refresh]

;change commander
!?FU(OnCustomDialogEvent)&i^dlg_id^=551/i^mouse_item^>30/i^mouse_item^<40/i^mouse_action^=(MOUSE_LMB_PRESSED);
!!SN:W^trainer_hero^/?y1;
!!COy1:T?y2;
!!VRy3:Si^mouse_item^-31; get type ID
!!DL551:A13/4/y3/1; set new commander in item 13
!!DL551:Ai^mouse_item^/4/9/1;
!!COy1:Ty3;
!!DO7780027/0/8/1:Py3;

!!if&y2<>y3;
  !!VRz1:S^trn_quest.wav^;
  !!SN:Pz1;
!!en;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^>=70/i^mouse_item^<=79/i^mouse_action^=(MOUSE_LMB_PRESSED); give commander artifacts
!!VR(sound:z):S^Button.wav^;
!!SN:P(sound);

!!VR(art:y):Si^mouse_item^ +76; get artifact ID/frame
!!SN:W^trainer_hero^/?(cmd:y);
!!VRv2:S-1;

!!DO7780029/0/5/1:P(cmd)/(art);

!!if&v2>0;                              [if the commander has got the artifact, ask to remove]
  !!FU(trainer_RmvCmdArts):P(art);
  !!FU(trainer_RefreshCmdArt):P;
  !!FU:E;
!!en;

!!DO7780028/0/5/1:P(cmd)/(art);
!!FU(trainer_RefreshCmdArt):P;          [refresh commander artifacts]
!!FU(trainer_PlayArtSound):P;

!?FU(trainer_RmvCmdArts);
!#VA(art:x);
!!SN:T^trainer.cmdRmvArt^/?(cmdRmvArt:z);
!!IF:Q1/(PIC_TYPE_ART)/(art)/2^%(cmdRmvArt)^;
!!FU&-1:E;
!!COi^trainer_hero^:A2/(art);           [remove art]

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^>=22/i^mouse_item^<=27/i^mouse_action^=(MOUSE_LMB_PRESSED); [set victory]
!!VR(slot:y):Si^mouse_item^ -22;
!!COi^trainer_hero^:A3/(slot)/?(art:y)/?(victory:y);
!!FU&(art)<(ART_AXE_OF_SMASHING):E;
!!SN:H^art^/(art)/0/?z1;
!!SN:T^trainer.cmdTitleArt^/?z4/^victory^/(victory)/^art^/z1 T^trainer.cmdLegendArt^/?z5;
!!IF:D30/4/5/^^;
!!IF:E1/30;                             [1 = index of v, 30 = number of extended dialog]
!!VRz1:H1;                              [check if text entered, flag 1=1 if yes]
!!FU|-1/v1<0:E;                         [end function if empty or Esc]

!!VR(victoryNew:y):Vz1;
!!VR(victoryNew):F0/(BITS_15_MASK);     [restrain value]
!!COi^trainer_hero^:A3/(slot)/?(art)/(victoryNew);

!?FU(trainer_RefreshCmdArt);
!!re (highlight:y)/80/89;
  !!DL(TRAINER_CMD_DLG):A(highlight)/4/0/1;
!!en;

!!re i/0/5;
  !!COi^trainer_hero^:A3/i/?(art:y)/?(victory:y);
  !!VR(artCad:y):Si +22;
  !!DL(TRAINER_CMD_DLG):A(artCad)/4/(art)/1;
  !!VR(highlight):S(art) -66;
  !!DL(TRAINER_CMD_DLG)&(art)>=(ART_AXE_OF_SMASHING):A(highlight)/4/1/1;
!!en;

!?FU7780029;
;x1 commander ID
;x2 artifact to give
!!COx1:A3/x16/?y1/?y2;
!!VRv2&y1=x2:S99;

!?FU7780028;
;x1 commander ID
;x2 artifact to add
!!COx1:A3/x16/?(art:y)/?(victory:y);
!!FU&(art)>0:E;
!!COx1:A3/x16/x2/?(victory);
!!VR(artCad:y):Sx16+22;
!!DL551:A(artCad)/4/x2/1;
!!VRx16:S999;

;infos on right-click
!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^>69/i^mouse_item^<80/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!VRy1:Si^mouse_item^+76; get artifact ID
!!SN:H^art^/y1/1/?z4;
!!IF:Q1/8/y1/4^%z4^;

;commanders infos
!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^>=31/i^mouse_item^<=39/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!VR(mon:y):Si^mouse_item^ +143; get monster ID
!!SN:H^monname^/(mon)/0/?(cmd:z);

!!if&(mon)=(MON_PALADIN_A);
  !!SN:T^trainer.paladin^/?(cmdDesc:z)^cmd^/(cmd);
  !!IF:Q1/20/68/9/37/4^%(cmdDesc)^;
!!el&(mon)=(MON_HIEROPHANT_A);
  !!SN:T^trainer.hierophant^/?(cmdDesc)/^cmd^/(cmd);
  !!IF:Q1/8/6/9/27/4^%(cmdDesc)^;
!!el&(mon)=(MON_TEMPLE_GUARDIAN_A);
  !!SN:T^trainer.templeGuardian^/?(cmdDesc)/^cmd^/(cmd);
  !!IF:Q1/20/29/9/44/4^%(cmdDesc)^;
!!el&(mon)=(MON_SUCCUBUS_A);
  !!SN:T^trainer.succubus^/?(cmdDesc)/^cmd^/(cmd);
  !!IF:Q1/9/29/4^%(cmdDesc)^;
!!el&(mon)=(MON_SOUL_EATER_A);
  !!SN:T^trainer.soulEater^/?(cmdDesc)/^cmd^/(cmd);
  !!IF:Q1/20/41/9/39/4^%(cmdDesc)^;
!!el&(mon)=(MON_BRUTE_A);
  !!SN:T^trainer.brute^/?(cmdDesc)/^cmd^/(cmd);
  !!IF:Q1/20/44/9/43/4^%(cmdDesc)^;
!!el&(mon)=(MON_OGRE_LEADER_A);
  !!SN:T^trainer.ogreLeader^/?(cmdDesc)/^cmd^/(cmd);
  !!IF:Q1/8/4/9/46/4^%(cmdDesc)^;
!!el&(mon)=(MON_SHAMAN_A);
  !!SN:T^trainer.shaman^/?(cmdDesc)/^cmd^/(cmd);
  !!IF:Q1/20/71/9/53/4^%(cmdDesc)^;
!!el&(mon)=(MON_ASTRAL_SPIRIT_A);
  !!SN:T^trainer.astralSpirit^/?(cmdDesc)/^cmd^/(cmd);
  !!IF:Q1/9/58/4^%(cmdDesc)^;
!!en;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=9/i^mouse_action^=(MOUSE_LMB_RELEASED); Info
!!OW:C?y1;
!!IF:Q1/10/y1/10/y1/1^%z177300^;        [ert - the only choice for long text?]

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^=12/i^mouse_action^=(MOUSE_LMB_RELEASED);
!!DL551:C1;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^=13/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!FU(trainer_ShowCmdScreen):Pi^trainer_hero^/1/1/?y1; [show commander screen]

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^>=122/i^mouse_item^<=123/i^mouse_action^=(MOUSE_LMB_PRESSED);
!!SN:T^trainer.titleCmdLv^/?z2/^hero^/s^trainer_hero^;
!!SN:T^trainer.legendCmdLv^/?z3/^max^/(TRAINER_LEVEL_CAP_LEGIT);
!!IF:D30/2/3/^^;
!!IF:E1/30;                             [1 = index of v, 30 = number of extended dialog]
!!VRz1:H1;                              [check if text entered, flag 1=1 if yes]
!!FU|-1/v1<0:E;                         [end function if empty or Esc]

!!VR(lv:y):Vz1;
!!VR(lv:y):F1/74;
!!FU(trainer_RefreshCmdLv):P(lv);                      [refresh interface]
!!VRi^trainer_cmdLv^:S(lv);

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^>=122/i^mouse_item^<=123/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!COi^trainer_hero^:X1/?(exp:y);
!!COi^trainer_hero^:X2/?(lv:y);

!!SN:T^trainer.cmdLvDesc^/?(cmdLvDesc:z)/^lv^/(lv);
!!IF:Q1/(PIC_TYPE_EXPERIENCE)/(exp)/4^%(cmdLvDesc)^;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^>=22/i^mouse_item^<=27/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!VR(slot:y):Si^mouse_item^ -22;
!!COi^trainer_hero^:A3/(slot)/?(art:y)/?(victory:y);

!!if&(art)>=(ART_AXE_OF_SMASHING);
  !!SN:H^art^/(art)/0/?(artName:z);
  !!IF:Q1/(PIC_TYPE_ART)/(art)/4^%(artName)^;
!!en;

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_CMD_DLG)/i^mouse_item^=12/i^mouse_action^=(MOUSE_LMB_RELEASED); [close cmd dialogue]
!!VR(cmd:y):Si^trainer_hero^;
!!CO(cmd):X2/?(lv:y);

!!if&i^trainer_cmdLv^<>(lv);           [if commander's lv was changed]
  !!FU7780016:Pi^trainer_cmdLv^/?(expNew:y);
  !!CO(cmd):X1/(expNew);
  !!CO(cmd):X2/i^trainer_cmdLv^;
  *!FU&i^trainer_cmdLv^>(lv):E;        [don't quit trainer interface if hero was leveled up - have to figure out how to refresh on closing Hero lv up screen!]
!!en;

!?FU(trainer_RefreshCmdLv);
!#VA(lv:x);

!!VRz33:S^%(lv)^;
!!DL(TRAINER_CMD_DLG):A123/3/z33/1;                   [Do not change z33!]

!?FU318727;
!!UN:Cx1/1/?y1 Cx2/1/y1;
!!VRx16&y1=0:S600;
!!VRx1:+1;
!!VRx2:+1;

!?FU(trainer_ShowCmdScreen);
; x1 - hero ID
; x2 - type of dialogue, 0 for LMD type, 1 for RMB (doesn't work for some reasons)
; x3 - oK button, 0 for yep, 1 for nah (doesn't work for some reasons)
; x4 - return value, 0 for commander alive, 1 for dead
!!VRy1:Sv1;
!!VRx1:*296+42344640;
!!SN:E7775342/2/x1/x2/x3/0;
!!SN:E7812840/1/42337496;
!!VRx4:Sv1;
!!VRv1:Sy1;

**** End Commander ****

**** Henchmen ****

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^=(TRAINER_BTN_HENCH)/i^mouse_action^=(MOUSE_LMB_RELEASED);
!#VA(firstLevelMons[9]:y);

!!VR(firstLevelMons):C(MON_PIKEMAN)/(MON_CENTAUR)/(MON_GREMLIN)/(MON_IMP)/(MON_SKELETON)/(MON_TROGLODYTE)/(MON_GOBLIN)/(MON_GNOLL)/(MON_PIXIE);

!!VR(hero:y):Si^trainer_hero^;
!!IF:W(hero);

!!if&w118>(NO_MON)/w119<>(TRUE);        [revive henchman if there was a one and perished]
  !!VRw119:S(TRUE);
  !!SN:T^trainer.henchRevived^/?z2;
  !!IF:M^%z2^;
!!el&w118<=(NO_MON);                    [give henchamn if there was none]
  !!VRw119:S(TRUE);
  !!HE(hero):B2/?(class:y);
  !!VR(town:y):S(class) :2;
  !!VRw118:S(firstLevelMons[town]);
  !!SN:T^trainer.henchNew^/?z3/^hero^/s^trainer_hero^;
  !!IF:Q1/(PIC_TYPE_MONSTER)/w118/1^%z3^;
!!en;

!!VR(exp:y):Sw117;

!!SN:T^trainer.titleHenchExp^/?z4/^exp^/(exp); [w var can't be in SN:T?]
!!SN:T^trainer.legendHenchExp^/?z5;
!!IF:D30/4/5/^^;
!!IF:E1/30;                             [1 = index of v, 30 = number of extended dialog]
!!VRz1:H1;                              [check if text entered, flag 1=1 if yes]
!!FU|-1/v1<0:E;                         [end function if empty or Esc]

!!VR(expAdd:y):Vz1;
!!VR(expAdd)&(expAdd)<>0:F-2000000000/2000000000; [restrain value]
!!VRw117&(expAdd)<>0:+(expAdd);               [calculate new exp]
!!VRw117|(expAdd)=0/w117<0:S0;             [restrain value, renove all exp if input was 0 or current exp < 0]

!?FU(OnCustomDialogEvent)&i^dlg_id^=(TRAINER_MAIN_DLG)/i^mouse_item^>=228/i^mouse_item^<=234/i^mouse_action^=(MOUSE_LMB_RELEASED);
!!VR(slot:y):Si^mouse_item^ -228;
!!VRi^trainer_hero^:S?(hero:y);
!!HE(hero):C0/(slot)/?(monType:y)/?(monCount:y);
!!FU&(monType)<=(NO_MON):E;

!!SN:H^monname^/(monType)/0/?(mon:z);
!!SN:T^trainer.henchChoice^/?(henchChoice:z)/^mon^/(mon);
!!IF:Q1/(PIC_TYPE_MONSTER)/(monType)/2^%(henchChoice)^;
!!FU&-1:E;

!!IF:W(hero);
!!VRw118:S(monType);
!!VRw119:S(TRUE);

**** End Henchmen ****