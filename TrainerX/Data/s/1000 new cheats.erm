ZVSE2
; Author:   Archer30
; Special thanks to Valery and daemon_n
; Engine:   ERM 2.0+
; Requires: ERA 3.9+, Era Erm Framework

; Cheats activated by F3 and F6


*****************************************************************
**** Set Up the type of the object placed by Place Obastacle ****
*****************************************************************

!?FU(trainer_SetVariables);
; ============== SETTINGS ==============
!!VRi^trainer_obstacleType^:S(OBJ_GRASS_HILLS); [default: (OBJ_GRASS_HILLS)]
!!VRi^trainer_obstacleSubtype^:S0;              [default: 0]
; ============ END SETTINGS ============

!?FU(OnEveryDay)&i^timerOnce^;
!!FU(trainer_SetVariables):P;

********************************************************************
**** Adv Map - Press F3 to move any hero, delete objects/events ****
********************************************************************

!?FU(OnKeyPressed_AdvMap)&i^key^=(KEY_F3)/999;
!#VA(key:x) (preventDefault:x) (isDown:x);

!!VR(preventDefault):S(TRUE);

!!FU(trainer_SetUpObjScanner):P;

!?FU(trainer_SetUpObjScanner);
!!if&i^trainer_objScannerOn^;
  !!IF:L^%T(trainer.objOff)^;
  !!SN:W^trainer_objScannerOn^/0;
!!el;
  !!SN:P^Military.wav^;
  !!IF:L^%T(trainer.objOn)^;
  !!SN:W^trainer_objScannerOn^/1;
!!en;

!?FU(OnKeyPressed_AdvMap)&i^key_alt^/i^trainer_objScannerOn^/999;
!#VA(key:x) (preventDefault:x) (isDown:x);

!!VR(flag:y):S0;
!!VR(flag)&(key)>=(KEY_0)/(key)<=(KEY_9):S1;
!!VR(flag)&(key)=(KEY_TILDE):S1;
!!FU&(flag)=0:E;                        [restrain key to be 1 to 8 and tilde]

!!SN:T^trainer.objScanner^/?(objScanner:z);

!!if&(key)=(KEY_1);
  !!VRi^trainer_objChoice^:S0;
  !!SN:T^trainer.objMain^/?(altStr:z);
!!el&(key)=(KEY_2);
  !!VRi^trainer_objChoice^:S1;
  !!SN:T^trainer.objMoveHeroAlt^/?(altStr);
!!el&(key)=(KEY_3);
  !!VRi^trainer_objChoice^:S2;

  !!if&i^trainer_ownerChoice^<=(PLAYER_LAST);
    !!FU(trainer_GetTxtFileString):P^plcolors^/i^trainer_ownerChoice^/?(owner:z);
  !!el&i^trainer_ownerChoice^=8;
    !!SN:T^trainer.none^/?(owner);
  !!en;
  
  !!SN:T^trainer.objOwnerAlt^/?(altStr)/^owner^/(owner);
!!el&(key)=(KEY_4);
  !!VRi^trainer_objChoice^:S3;
  !!SN:T^trainer.objDel^/?(altStr);
!!el&(key)=(KEY_5);
  !!VRi^trainer_objChoice^:S4;
  !!SN:T^trainer.objObstacle^/?(altStr);
!!el&(key)=(KEY_6);
  !!VRi^trainer_objChoice^:S5;
  !!SN:T^trainer.objEventOff^/?(altStr);
!!el&(key)=(KEY_7);
  !!VRi^trainer_objChoice^:S6;
  !!SN:T^trainer.objEventOn^/?(altStr);
!!el&(key)=(KEY_8);
  !!VRi^trainer_objChoice^:S7;
  !!SN:T^trainer.objBuildAll^/?(altStr);
!!el&(key)=(KEY_9);
  !!VRi^trainer_objChoice^:S8;
  !!SN:T^trainer.objRemoveAll^/?(altStr);
!!el|(key)=(KEY_0)/(key)=(KEY_TILDE);
  !!VRi^trainer_objChoice^:S9;
  !!SN:T^trainer.disableAltClick^/?(altStr);
!!en;

!!VR(popup:z):S(objScanner) +(altStr);
!!IF:L^%(popup)^;

!?FU(OnAdventureMapRightMouseClick)&i^trainer_objScannerOn^/i^key_ctrl^=(FALSE)/i^mouse_item^=37/999;
!!CM:R0;

!!CM:P?(x:y)/?(y:y)/?(z:y);
!!OB(x)/(y)/(z):T?(obj:y);

!!SN:T^trainer.objTitle^/?z1 T^trainer.objMain^/?z2 T^trainer.objMoveHero^/?z3;
!!SN:T^trainer.objOwner^/?z4/^colour^/z11;
!!SN:T^trainer.objDel^/?z5 T^trainer.objObstacle^/?z6 T^trainer.objEventOff^/?z7 T^trainer.objEventOn^/?z8;
!!SN:T^trainer.objBuildAll^/?z9 T^trainer.objRemoveAll^/?z10 T^trainer.chgMind^/?z11;

!!VR(choice:y):S1 Sd<<i^trainer_objChoice^;
!!IF:G1/1/(choice)/1/2/3/4/5/6/7/8/9/10/11;
!!FU(IntLog2):Pv1/?i^trainer_objChoice^;

!!FU(trainer_ObjScannerOptions):P(x)/(y)/(z);

!?FU(OnAdventureMapLeftMouseClick)&i^trainer_objScannerOn^/i^key_alt^/i^mouse_action^=(MOUSE_LMB_PRESSED)/i^mouse_item^=37/999;
!!CM:R0;

!!CM:P?(x:y)/?(y:y)/?(z:y);
!!FU(trainer_ObjScannerOptions):P(x)/(y)/(z);

!?FU(trainer_ObjScannerOptions)&i^trainer_objChoice^<>(trainer_OBJ_OPT_NONE);
!#VA(x:x) (y:x) (z:x);

!!OB(x)/(y)/(z):T?(obj:y);

!!if&i^trainer_objChoice^=0;
  !!FU(trainer_ObjScannerMain):P(x)/(y)/(z)/(obj);
!!el&i^trainer_objChoice^=1;
  !!FU(trainer_ObjScannerTelpt):P(x)/(y)/(z)/(obj);
!!el&i^trainer_objChoice^=2;
  !!FU(trainer_ObjScannerOwner):P(x)/(y)/(z)/(obj);
!!en;

!!if&i^trainer_objChoice^=3;            [delete object]
  !!FU|(obj)=(OBJ_STUB)/(obj)=(OBJ_ANCHOR_POINT)/(obj)=(OBJ_EVENT):E;

  !!CA(x)/(y)/(z)&(obj)=(OBJ_TOWN):O(NO_OWNER);
  !!UN&(obj)<>(OBJ_HERO)/(obj)<>(OBJ_OBELISK):O(x)/(y)/(z); [delete objects except for hero and obelisk]

  !!if&(obj)=(OBJ_HERO);
    !!HE(x)/(y)/(z):O(NO_OWNER);        [kill hero]
    !!HE(x)/(y)/(z):K;                  [Secure the kill]
    !!UN:L(x)/(y)/(z)/1;
  !!el&(obj)=(OBJ_OBELISK);
    !!OW:C?(player:y);
    !!MT(x)/(y)/(z):N?(obelisk:y);
    !!UN:L(player)/(obelisk)/?(isVisited:y); [delete obelisk only if visited]
    !!FU&(isVisited)<>(TRUE):E;
    !!UN:O(x)/(y)/(z);
  !!en;

  !!UN|(obj)=(OBJ_TOWN)/(obj)=(OBJ_HERO):R1; [refresh if deleted object was hero or town]
  !!SN:P^killfade.wav^;
!!en;

!!if&i^trainer_objChoice^=4;            [place obstacles]
  !!FU&(obj)<>(OBJ_STUB)/(obj)<>(OBJ_ANCHOR_POINT):E;

  *!TR(x)/(y)/(z):T?(land:y)/?(landSub:y)/?(river:y)/?(riverSub:y)/?(road:y)/?(roadSub:y)/?(mirror:y)/?(accessability:y); [no need to differentiate water and land...]
  !!UN:I(x)/(y)/(z)/i^trainer_obstacleType^/i^trainer_obstacleSubtype^;
  !!SN:P^telptin.wav^;
!!en;

!!if&i^trainer_objChoice^=5/(obj)=(OBJ_EVENT); [disable event for current human player]
  !!OW:C?(currPlayer:y);
  !!LE(x)/(y)/(z):D(currPlayer)/1;      [LE:D get syntax doesn't work, damn]
  !!SN:P^trn_quest.wav^;
!!en;

!!if&i^trainer_objChoice^=6/(obj)=(OBJ_EVENT); [disable event for current human player]
  !!OW:C?(currPlayer:y);
  !!LE(x)/(y)/(z):D(currPlayer)/0;      [LE:D get syntax doesn't work, damn]
  !!SN:P^trn_quest.wav^;
!!en;

!!if&i^trainer_objChoice^=7/(obj)=(OBJ_TOWN);
  !!FU(trainer_ObjScannerBuildings):P(x)/(y)/(z)/(TRUE);
!!el&i^trainer_objChoice^=8/(obj)=(OBJ_TOWN);
  !!FU(trainer_ObjScannerBuildings):P(x)/(y)/(z)/(FALSE);
!!en;

!?FU(trainer_ObjScannerMain);
; This is for the main cheat (Trainer interface). Several objects are checked - trying to make it easier for player to find the hero they wish to find
!#VA(x:x) (y:x) (z:x) (obj:x);

; If clicked on a hero, enter trainer main interface with that hero
!!if&(obj)=(OBJ_HERO);                
  !!HE(x)/(y)/(z):N?i^trainer_hero^;
  !!FU(trainer_MainDialog):P;
; If clicked on an object wtth owner, enter search for possible hero to enter trainer interface
!!el|(obj)=(OBJ_TOWN)/(obj)=(OBJ_CREATURE_GENERATOR_1)/(obj)=(OBJ_CREATURE_GENERATOR_4)/(obj)=(OBJ_MINE)/(obj)=(OBJ_MINE_2)/(obj)=(OBJ_LIGHTHOUSE)/(obj)=(OBJ_GARRISON)/(obj)=(OBJ_SHIPYARD);
  !!VRi^trainer_hero^:S(NO_HERO);     [initialise hero ID]

  !!CA(x)/(y)/(z)&(obj)=(OBJ_TOWN):O?(owner:y);
  !!DW(x)/(y)/(z)|(obj)=(OBJ_CREATURE_GENERATOR_1)/(obj)=(OBJ_CREATURE_GENERATOR_4):O?(owner);
  !!MN(x)/(y)/(z)|(obj)=(OBJ_MINE)/(obj)=(OBJ_MINE_2)/(obj)=(OBJ_LIGHTHOUSE):O?(owner)/1; [check for owner but don't redraw]
  !!GR(x)/(y)/(z)&(obj)=(OBJ_GARRISON):O?(owner);
  !!SY(x)/(y)/(z)&(obj)=(OBJ_SHIPYARD):O?(owner);

  ; Look for hero of the object onwer, activate main interface if matches
  !!FU(trainer_SelectHeroByPlayer)&i^trainer_hero^=(NO_HERO)/(owner)>(NO_PLAYER):P(owner)/1/0; 
  !!FU(trainer_MainDialog)&i^trainer_hero^>(NO_HERO)/(owner)>(NO_PLAYER):P;

  ; Pops up main dialogue for asking a name or ID of a hero if the object has no owner
  !!FU(trainer_SelectHeroMain)&i^trainer_hero^=(NO_HERO)/(owner)=(NO_PLAYER):P; 

  ; Pops up msg if the owner of the obejct has no hero
  !!if&i^trainer_hero^=(NO_HERO)/(owner)>(NO_PLAYER); 
    !!CA(x)/(y)/(z)&(obj)=(OBJ_TOWN):N?(objName:z);
    !!SN|(obj)=(OBJ_CREATURE_GENERATOR_1)/(obj)=(OBJ_CREATURE_GENERATOR_4):T^trainer.dwelling^/?(objName);      
    !!SN|(obj)=(OBJ_MINE)/(obj)=(OBJ_MINE_2)/(obj)=(OBJ_LIGHTHOUSE):T^trainer.mine^/?(objName);
    !!SN&(obj)=(OBJ_GARRISON):T^trainer.garrison^/?(objName);
    !!SN&(obj)=(OBJ_SHIPYARD):T^trainer.shipyard^/?(objName);
    !!SN:T^trainer.objMainNoHero^/?(objMainNoHero:z)/^object^/(objName);
    !!IF:M^%(objMainNoHero)^;
  !!en;
!!el;
  ; If the right clicked object is not a hero/town/dwelling/mine/shipyard, show dialogue
  !!FU(trainer_SelectHeroMain):P;     
!!en;

!?FU(trainer_ObjScannerTelpt);
!#VA(x:x) (y:x) (z:x) (obj:x);

!!if&i^key_alt^;                        [if alt is pressed, move current hero]
  !!OW:A(CURRENT_PLAYER)/?(activeHero:y);

  !!if&(activeHero)>(NO_HERO);
    !!HE(activeHero)|(x)>0/(y)>0/(z)>0:P(x)/(y)/(z);[don't teleport if clicked on outside of the map, sorry to 0/0/0]
    !!FU:E;                             [exit the funciton if teleported, otherwise pop up dialogue if there is no current hero]
  !!en;
!!en;

!!VRi^trainer_hero^:S(NO_HERO);         [initialise hero ID]

!!SN:T^trainer.titleMoveHero^/?z6 T^trainer.legendMoveHero^/?z7;
!!IF:D55/6/7/0/0/0/0/0;
!!IF:E1/55;
!!VRz1:H1; **check if text entered, flag 1=1 if yes
!!FU&v1<0:E;
!!VRs^trainer_input^:Sz1;

!!FU(trainer_SelectHeroByInput)&1:P?(isWrongName:y);
!!FU&(isWrongName):E;

; Get a hero of current player if nothing was input
!!if&i^trainer_hero^=(NO_HERO);
  !!OW:C?(player:y);
  !!FU(trainer_SelectHeroByPlayer):P(player)/0/1;
!!en;

!!if&i^trainer_hero^>(NO_HERO);
  !!HEi^trainer_hero^:P(x)/(y)/(z);
  !!UN:R1;                            [UN:R1 doesn't refresh hero list now?]
!!en;

!?FU(trainer_ObjScannerOwner);
!#VA(x:x) (y:x) (z:x) (obj:x);

!!FU&(obj)<>(OBJ_HERO)/(obj)<>(OBJ_TOWN)/(obj)<>(OBJ_CREATURE_GENERATOR_1)/(obj)<>(OBJ_CREATURE_GENERATOR_4)/(obj)<>(OBJ_MINE)/(obj)<>(OBJ_MINE_2)/(obj)<>(OBJ_LIGHTHOUSE)/(obj)<>(OBJ_GARRISON)/(obj)<>(OBJ_SHIPYARD):E;;

!!if&i^key_alt^;
  !!FU(trainer_CheckOwner):P(x)/(y)/(z)/(obj)/?(owner:y);
  !!FU&(owner)=i^trainer_ownerChoice^:E;
  
  !!FU(trainer_ChangeOwner):P(x)/(y)/(z)/(obj)/i^trainer_ownerChoice^;

  !!FU:E;
!!en;

!!SN:T^trainer.chgMind^/?z12;

!!re (zIndex:y)/3/10;
  !!VR(lineIndex:y):S(zIndex) -3;
  !!FU(trainer_GetTxtFileString):P^plcolors^/(lineIndex)/?z(zIndex);
!!en;

!!if&(obj)=(OBJ_HERO);
  !!SN:T^trainer.titleOwnerHero^/?z2/^object^/z1 T^trainer.noOwnerHero^/?z11;
!!el;
  !!SN:T^trainer.titleOwner^/?z2/^object^/z1 T^trainer.none^/?z11;
!!en;

!!VR(choice:y):S1 Sd<<i^trainer_ownerChoice^;
!!IF:G1/1/(choice)/2/3/4/5/6/7/8/9/10/11/12;
!!FU(IntLog2):Pv1/?(ownerNew:y);

!!FU&(ownerNew)>=9:E;

!!FU(trainer_CheckOwner):P(x)/(y)/(z)/(obj)/?(owner:y);
!!FU&(owner)=(ownerNew):E;

!!VRi^trainer_ownerChoice^:S(ownerNew); [remember the last choice if something was selected]
!!FU(trainer_ChangeOwner):P(x)/(y)/(z)/(obj)/(ownerNew);

!?FU(trainer_CheckOwner);
!#VA(x:x) (y:x) (z:x) (obj:x) (owner:x);

!!if&(obj)=(OBJ_HERO);
  !!HE(x)/(y)/(z):O?(owner);
!!el&(obj)=(OBJ_TOWN);
  !!CA(x)/(y)/(z):O?(owner);
!!el|(obj)=(OBJ_CREATURE_GENERATOR_1)/(obj)=(OBJ_CREATURE_GENERATOR_4);
  !!DW(x)/(y)/(z):O?(owner);
!!el|(obj)=(OBJ_MINE)/(obj)=(OBJ_MINE_2)/(obj)=(OBJ_LIGHTHOUSE);
  !!MN(x)/(y)/(z):O?(owner)/1;           [set for owner and redraw]
!!el&(obj)=(OBJ_GARRISON);
  !!GR(x)/(y)/(z):O?(owner);
!!el&(obj)=(OBJ_SHIPYARD);
  !!SY(x)/(y)/(z):O?(owner);
!!en;

!!VR(owner)&(owner)=(NO_PLAYER):S8;     [return owner as 8 for IF:G dialogue]

!?FU(trainer_ChangeOwner);
!#VA(x:x) (y:x) (z:x) (obj:x) (ownerNew:x);

!!VR(ownerNew)&(ownerNew)=8:S(NO_OWNER);

!!if&(obj)=(OBJ_HERO);
  !!HE(x)/(y)/(z):O(ownerNew);

  !!if&(ownerNew)=(NO_OWNER);           [kill hero]
    !!HE(x)/(y)/(z):K;                  [Secure the kill]
    !!UN:L(x)/(y)/(z)/1;
    !!VR(sound:z):S^killfade.wav^;
  !!el;
    !!VR(sound):S^NwHeroLv.82m^;
  !!en;

  !!UN:R1;
!!el&(obj)=(OBJ_TOWN);
  !!CA(x)/(y)/(z):O(ownerNew);
  !!VR(sound):S^buildtwn.82m^;
  !!UN:R1;
!!el|(obj)=(OBJ_CREATURE_GENERATOR_1)/(obj)=(OBJ_CREATURE_GENERATOR_4);
  !!DW(x)/(y)/(z):O(ownerNew);
  !!VR(sound):S^Military.wav^;
!!el|(obj)=(OBJ_MINE)/(obj)=(OBJ_MINE_2)/(obj)=(OBJ_LIGHTHOUSE);
  !!MN(x)/(y)/(z):O(ownerNew)/0;           [set for owner and redraw]
  !!VR(sound):S^flagmine.wav^;
!!el&(obj)=(OBJ_GARRISON);
  !!GR(x)/(y)/(z):O(ownerNew);
  !!VR(sound):S^Military.wav^;
!!el&(obj)=(OBJ_SHIPYARD);
  !!SY(x)/(y)/(z):O(ownerNew);
  !!VR(sound):S^Store.wav^;
!!en;

!!SN:P(sound);

!?FU(trainer_ObjScannerBuildings);
!#VA(x:x) (y:x) (z:x);
!#VA(isBuild:x);                        [Boolean. If True, build all building for the targeted town. Otherwise demolish all]

!!CA(x)/(y)/(z):U?(townId:y) T?(townType:y);

!!FU(trainer_CheckBuildingEligibility)|(townType)=(TOWN_CASTLE)/(townType)=(TOWN_NECROPOLIS)/(townType)=(TOWN_FORTRESS)/(townType)=(TOWN_CONFLUX):P(townId)/6/?(canBuildShipyard:y);

!!re i/0/43;
  !!VR(flag:y):S(TRUE);
  !!VR(flag)&i=3/(townType)>=(TOWN_STRONGHOLD)/(townType)<=(TOWN_FORTRESS):S(FALSE); [Mage guild 4]

  !!if&i=4;                             [Mage guild 5]
    !!VR(flag)&(townType)>=(TOWN_STRONGHOLD)/(townType)<=(TOWN_FORTRESS)|(townType)=(TOWN_CASTLE):S(FALSE);
  !!en;

  !!if&(canBuildShipyard)=(FALSE);
    !!VR(flag)&i=6:S(FALSE); [Shipyard]
    !!VR(flag)&i=17/(townType)=(TOWN_CASTLE):S(FALSE); [Lighthouse]
  !!en;

  !!VR(flag)&i=20:S(FALSE);             [void]
  !!VR(flag)&i=22/(townType)=(TOWN_CONFLUX):S(FALSE);
  !!VR(flag)&i=23/(townType)<=(TOWN_RAMPART)/(townType)>=(TOWN_FORTRESS):S(FALSE);
  !!VR(flag)&i=23/(townType)=(TOWN_NECROPOLIS):S(FALSE); [Second horde building]
  !!VR(flag)&i>=24/i<=25/(townType)<>(TOWN_RAMPART)/(townType)<>(TOWN_INFERNO):S(FALSE); [Upgraded second horde building]
  !!VR(flag)&i>=27/i<=29:S(FALSE);
  !!co&(flag)=(FALSE);

  !!CA0/(townId)&(isBuild):B6/i;
  !!CA0/(townId)&(isBuild)<>(TRUE):B2/i;
!!en;

!!CA0/(townId)&(isBuild)=(FALSE):B6/10; [Make sure the town has village hall even if demolishing]
!!CA0/(townId):I0;                      [Update how the town looks on the map]

; build Third Upgrade Building
!!VRi^tum_upgGuild_%(townId)^&i^Typhon_Third_Upgrade_Mod_Active^:S(isBuild);

!!if&i^eighth_on^/(isBuild)/i^eighth_8thDwell_%(townId)^=(FALSE); [Eighth Dwelling]
  !!FU(eighth_Get8thMon):P(townType)/(TRUE)/?(eighthMon:y)/?(nonUpgMon:y);
  !!FU(eighth_Get8thBasicGrowth):P(townType)/?(basicGrowth:y);
  !!FU(eighth_SetOrGet8thMon):P(townId)/(eighthMon)/(basicGrowth)/0;
  !!VRi^eighth_8thDwell_%(townId)^:S(TRUE);
!!el&i^eighth_on^/(isBuild)/i^eighth_8thDwell_%(townId)^; [upgrade 8th dwelling ]
  !!FU(eighth_SetOrGet8thMon):P(townId)/?(eighthMon)/?(qty:y)/1; [get available quantity]
  !!FU(eighth_Get8thMon):P(townType)/(TRUE)/?(eighthMon)/?(nonUpgMon);
  !!FU(eighth_SetOrGet8thMon):P(townId)/(eighthMon)/(qty);
!!el&i^eighth_on^/(isBuild)=(FALSE)/i^eighth_8thDwell_%(townId)^=(TRUE); [demolish]
  !!FU(eighth_SetOrGet8thMon):P(townId)/(NO_MON)/-1/0;
  !!VRi^eighth_8thDwell_%(townId)^:S(FALSE);
!!en;

!!SN:P^BUILDTWN.wav^;

; Is it allowed in principle to build this building in the city?            [by igrik]
!?FU(trainer_CheckBuildingEligibility);
!#VA(townId:x);                         [town number on map (0...47)]
!#VA(building:x);                       [building id]
!#VA(result:x);                         [return: bool (0-no, 1-yes)]

!!VR(result):S(FALSE);   
!!FU(Town_GetStruct):P(townId)/?(ptr:y);
!!CA0/(townId):R?(isbuilt:y) R(FALSE);
!!SN:E6033696/2/(ptr)/(building);
!!VR(result)&v1<>(FALSE):S(TRUE);
!!CA0/(townId):R(isbuilt);

; Get city structure
!?FU(trainer_GetStruct);
!#VA(townId:x);                         [Town number on map (0...47)]
!#VA(ptr:x);                            [Return: ptr structure town]
 
!!IF&(townId)<=(NO_TOWN)|(townId)>47:M^Wrong town id.^;
!!UN:C6919480/4/?(value:y); 
!!VR(value):+136724;
!!UN:C(value)/4/?(value2:y); 
!!VR(ptr:x):S(townId) *360 +(value2);
!!IF&(ptr)<43200000:M^{Attention!}
Error in getting town structure address. 
The game may fall at any time.^; 

*******************************************************
**** Adv Map - Press F6 for additional cheats menu ****
*******************************************************

!?FU(OnKeyPressed_AdvMap)&i^key^=(KEY_F6)/999;
!#VA(key:x) (preventDefault:x) (isDown:x);

!!VR(preventDefault):S(TRUE);

!!FU(trainer_ShowAddCheats_advMap):P;

!?FU(trainer_ShowAddCheats_advMap);
; set up option (artfact) names
!!SN:T^trainer.addCoordOff^/?(coordOff:z) H^art^/(ART_BLACKSHARD_OF_THE_DEAD_KNIGHT)/0/(coordOff);
!!SN:T^trainer.addCoordOn^/?(coordOn:z) H^art^/(ART_SPECULUM)/0/(coordOn);
!!SN:T^trainer.addEventsOff^/?(eventsOff:z) H^art^/(ART_SHIELD_OF_THE_YAWNING_DEAD)/0/(eventsOff);
!!SN:T^trainer.addEventsOn^/?(eventsOn:z) H^art^/(ART_SPYGLASS)/0/(eventsOn);
!!SN:T^trainer.addBuilderOff^/?(builderOff:z) H^art^/(ART_SPIRIT_OF_OPPRESSION)/0/(builderOff);
!!SN:T^trainer.addBuilderOn^/?(builderOn:z) H^art^/(ART_BADGE_OF_COURAGE)/0/(builderOn);
!!SN:T^trainer.addDate^/?(date:z) H^art^/(ART_HOURGLASS_OF_THE_EVIL_HOUR)/0/(date);
!!SN:T^trainer.titleAdd^/?(titleAdd:z);

; set up option (artifact) icons
!!if&i^trainer_coord_on^;
  !!VR(coordIcon:y):S(ART_SPECULUM);
!!el;
  !!VR(coordIcon):S(ART_BLACKSHARD_OF_THE_DEAD_KNIGHT);
!!en;

!!if&i^trainer_events_on^;
  !!VR(eventsIcon:y):S(ART_SPYGLASS);
!!el;
  !!VR(eventsIcon):S(ART_SHIELD_OF_THE_YAWNING_DEAD);
!!en;

!!if&i^trainer_builder_on^;
  !!VR(builderIcon:y):S(ART_BADGE_OF_COURAGE);
!!el;
  !!VR(builderIcon):S(ART_SPIRIT_OF_OPPRESSION);
!!en;

; show dialogue
!!IF:N(PIC_TYPE_ART)/(coordIcon)/(PIC_TYPE_ART)/(eventsIcon)/(PIC_TYPE_ART)/(builderIcon)/(PIC_TYPE_ART)/(ART_HOURGLASS_OF_THE_EVIL_HOUR);
!!IF:N(MSG_TYPE_CHOOSE_PIC_OR_CANCEL)/^%(titleAdd)^/?(choice:y)/(TEXT_ALIGN_CENTER)/(DLG_NO_SELECTION);

; execute accoridng to choices
!!if&(choice)=0;
  !!FU(trainer_SetUpCoordScanner):P;
!!el&(choice)=1;
  !!FU(trainer_SetUpDisplayEvents):P;
!!el&(choice)=2;
  !!FU(trainer_SetUpBuilderMode):P;
!!el&(choice)=3;
  !!FU(trainer_ChangeIngameDate):P;
!!en;

; restore names of artifacts
!!UN:A(ART_BLACKSHARD_OF_THE_DEAD_KNIGHT)/9/0 A(ART_SPECULUM)/9/0 A(ART_SHIELD_OF_THE_YAWNING_DEAD)/9/0 A(ART_SPYGLASS)/9/0 A(ART_SPIRIT_OF_OPPRESSION)/9/0 A(ART_BADGE_OF_COURAGE)/9/0;
!!UN:P106/?(hourglassOn:y);             [check if Hourglass of Asmodeus is enabled]

!!if&(hourglassOn);
  !!SN:H^art^/(ART_HOURGLASS_OF_THE_EVIL_HOUR)/0/z106002; [restore names with ert if Asmodeus is enabled]
!!el;
  !!SN:H^-art^/(ART_HOURGLASS_OF_THE_EVIL_HOUR)/0/^^;
!!en;

; re-open the dialog with updated pictures
!!FU(trainer_ShowAddCheats_advMap)&(choice)<>-1:P;

** Show coordinates
!?FU(trainer_SetUpCoordScanner);
!!if&i^trainer_coord_on^;
  !!IF:L^%T(trainer.addCoordOff)^;
  !!VRi^trainer_coord_on^:S(FALSE);
!!el;
  !!SN:P^Military.wav^;
  !!IF:L^%T(trainer.addCoordOn)^;
  !!VRi^trainer_coord_on^:S(TRUE);
!!en;

!?FU(OnAdvMapTileHint)&i^trainer_coord_on^;
!#VA(x:x) (y:x) (z:x) (objType:x) (objSubtype:x);

!!MM:M?(existingHint:z);
!!HE(x)/(y)/(z)&(objType)=(OBJ_HERO):N?(objSubtype); [fix subtype of heroes]
!!SN:T^trainer.hintCoord^/?(hintCoord:z)/^x^/(x)/^y^/(y)^z^/(z)/^objType^/(objType)/^objSubtype^/(objSubtype)/^existingHint^/(existingHint);
!!MM:M^%(hintCoord)^;

** Builder Mode
!?FU(trainer_SetUpBuilderMode);
!!if&i^trainer_builder_on^;
  !!IF:L^%T(trainer.addBuilderOff)^;
  !!VRi^trainer_builder_on^:S(FALSE);
  !!CD:D4 M55;
!!el;
  !!SN:P^Military.wav^;
  !!IF:L^%T(trainer.addBuilderOn)^;
  !!VRi^trainer_builder_on^:S(TRUE);
  !!CD:D(INT_MAX) M0;
!!en;

!?FU(OnAfterBuildTownBuilding)&i^trainer_builder_on^/1000; [trigger for human player only]
!#VA(townId:x);

!!CA0/(townId):R(FALSE);

!?FU(OnTownMouseClick)&i^trainer_builder_on^/i^mouse_item^>=0/i^mouse_item^<=43;
!!UN:V?(verWoG:y)/?(verErm:y);

!!if&(verErm)<=3901;                    [compatiblity - replaced with OnAfterBuildTownBuildings for ERA later than 3.9.1]
  !!CA(CURRENT_TOWN):R(FALSE);          [restore built status - since it works with mouse click trigger, it won't work for AI]
  !!UN:R4/(CURRENT_TOWN);
!!en;

!!FU(trainer_ReduceDemolishRequirements)&i^mouse_action^=(MOUSE_RMB_PRESSED):P;

!?FU(trainer_ReduceDemolishRequirements);
!!CA(CURRENT_TOWN):H1/?(visitingHero:y) T?(townType:y);
!!FU&(visitingHero)=(NO_HERO):E;

!!CD:A(townType)/i^mouse_item^/1 E(townType)/i^mouse_item^/0;

** Change in-game date
!?FU(trainer_ChangeIngameDate);
!!SN:T^trainer.titleDate^/?z4 T^trainer.legendDate^/?z5;
!!IF:D30/4/5/^^;
!!IF:E1/30;                             [1 = index of v, 30 = number of extended dialog]
!!VRz1:H1;                              [check if text entered, flag 1=1 if yes]
!!FU|-1/v1<0:E;                         [end function if empty or Esc]

!!FU(trainer_ConvertStrToInts):Pz1/?(arrayId:y)/?(amountOfElems:y);
!!FU(trainer_ApplyArrayToDate):P(arrayId);

!?FU(trainer_ConvertStrToInts);         [daemon_n]
!#VA(strPtr:x);                         [Original string.]
!#VA(numbersarrayId:x);                 [returns local array id via ?(intVar:y)]
!#VA(amountOfNumbers:x);                [returns local array id size ]

!!VRs^trainer_originalString^:S^%z(strPtr)^;
!!SN:Ks^trainer_originalString^/?(strLength:y);

!!VR(amountOfNumberArrays:y):S1;
!!FU(NewIntArray):P?i^current_%(amountOfNumberArrays)_array_ID^;
!!VR(breakPoint:y):S(NULL);
!!VR(isNeedBreakPoint:y):S(FALSE);

!!re i/0/(strLength)/1/-1;
  !!SN:Ks^trainer_originalString^/i/?(checkSymbol:z);
  !!VR(isNeedBreakPoint):S(TRUE);

  !!re (commonInt:y)/0/9;

    !!if&(checkSymbol)=^%(commonInt)^;
      *!IF&(commonInt)=0:L^%(checkSymbol)^;
      !!FU(Array_Push):Pi^current_%(amountOfNumberArrays)_array_ID^/(commonInt);
      !!VR(isNeedBreakPoint):S(FALSE);
      !!br;
    !!en;
  !!en;

  !!if&(isNeedBreakPoint);
    !!SN:Mi^current_%(amountOfNumberArrays)_array_ID^/?(arrayLength:y);
    !!co&(arrayLength)=(NULL);

    !!VR(amountOfNumberArrays):+1;
    !!FU(NewIntArray):P?i^current_%(amountOfNumberArrays)_array_ID^;
  !!en;
!!en;

!!VRs^trainer_originalString^:S^^;
!!SN:Mi^current_%(amountOfNumberArrays)_array_ID^/?(arrayLength:y);
!!VR(amountOfNumberArrays)&(arrayLength)=(NULL):-1;

!!if&(amountOfNumberArrays);  
  !!FU(NewIntArray):P?(numbersarrayId:x);

  !!re i/1/(amountOfNumberArrays);

    !!VR(elemSumm:y):S(NULL);
    !!SN:Mi^current_%i_array_ID^/?(arrayLength:y);

    !!re j/0/(arrayLength)/1/-1;

    !!SN:Mi^current_%i_array_ID^/j/?(elemValue:y);
    !!VR(multipler:y):S(arrayLength) -j -1;

      !!if&(multipler);

        !!re k/1/(multipler);
          !!VR(elemValue):*10;
        !!en;
      !!en;

      !!VR(elemSumm):+(elemValue);
    !!en;

    !!FU(Array_Push)&(arrayLength):P(numbersarrayId)/(elemSumm);
    !!VRi^current_%i_array_ID^:S(NULL);
  !!en;

  !!VR(amountOfNumbers):S(amountOfNumberArrays);
  !!SN:F^ExtendArrayLifetime^/(numbersarrayId);
!!el;
  !!IF:M^There is no number in the text you just entered!^;
!!en;

!?FU(trainer_ApplyArrayToDate);
!#VA(arrayId:x);

!!FU(Array_EnsureMinSize):P(arrayId)/3/1;

!!UN:C6919480/4/?(address:y);

!!VR(addressMonth:y):S(address) +128578;        [Month]
!!SN:M(arrayId)/0/?(month:y);
!!VR(month):F1/(INT_MAX);
!!UN:C(addressMonth)/(UNC_INT16)/(month);

!!VR(addressWeek:y):S(address) +128576;         [Week (1...4)]
!!SN:M(arrayId)/1/?(week:y);
!!VR(week):F1/4;
!!UN:C(addressWeek)/(UNC_INT16)/(week);

!!VR(addressWeekday:y):S(address) +128574;      [Weekday  (1...7)]
!!SN:M(arrayId)/2/?(weekday:y);
!!VR(weekday):F1/7;
!!UN:C(addressWeekday)/(UNC_INT16)/(weekday);

!!UN:R2;

***********************************************************
**** Battlefield - Press F3 for additional cheats menu ****
***********************************************************

!?FU(OnKeyPressed_Battle)&i^key^=(KEY_F3)/i^battle_humanOnly^=(FALSE);
!#VA(key:x) (preventDefault:x) (isDown:x);

!!VR(preventDefault):S(TRUE);

!!FU(trainer_ShowAddCheats_battle):P;

!?FU(trainer_ShowAddCheats_battle);
; set up option (artfact) names
!!SN:T^trainer.addCastOff^/?(castOff:z) H^art^/(ART_ORB_OF_INHIBITION)/0/(castOff);
!!SN:T^trainer.addCastOn^/?(castOn:z) H^art^/(ART_ORB_OF_VULNERABILITY)/0/(castOn);
!!SN:T^trainer.addWinBattle^/?(winBattle:z) H^art^/(ART_ARMAGEDDONS_BLADE)/0/(winBattle);
!!SN:T^trainer.titleAdd^/?(titleAdd:z);

; set up option (artifact) icons
!!if&i^trainer_cast_on^;
  !!VR(castIcon:y):S(ART_ORB_OF_VULNERABILITY);
!!el;
  !!VR(castIcon):S(ART_ORB_OF_INHIBITION);
!!en;

; show dialogue
!!IF:N(PIC_TYPE_ART)/(castIcon)/(PIC_TYPE_ART)/(ART_ARMAGEDDONS_BLADE);
!!IF:N(MSG_TYPE_CHOOSE_PIC_OR_CANCEL)/^%(titleAdd)^/?(choice:y)/(TEXT_ALIGN_CENTER)/(DLG_NO_SELECTION);

; execute accoridng to choices
!!if&(choice)=0;
  !!FU(trainer_SetUpMulticast):P;
!!el&(choice)=1;
  !!FU(trainer_WinThisBattle):P;
!!en;

; restore names of artifacts
!!UN:A(ART_ORB_OF_INHIBITION)/9/0 A(ART_ORB_OF_VULNERABILITY)/9/0 A(ART_ARMAGEDDONS_BLADE)/9/0;

; re-open the dialog with updated pictures
!!FU(trainer_ShowAddCheats_battle)&(choice)=0:P; [if the choice was mutlicast]

** Multicast
!?FU(trainer_SetUpMulticast);
!!if&i^trainer_cast_on^;
  !!IF:L^%T(trainer.addCastOff)^;
  !!VRi^trainer_cast_on^:S(FALSE);
!!el;
  !!SN:P^Military.wav^;
  !!IF:L^%T(trainer.addCastOn)^;
  !!VRi^trainer_cast_on^:S(TRUE);
!!en;

!?FU(OnAfterBattleAction)&i^trainer_cast_on^;
!!BH(BATTLE_LEFT)&i^battle_human_0^:M0; [for human players only]
!!BH(BATTLE_RIGHT)&i^battle_human_1^:M0;

** Win this Battle
!?FU(trainer_WinThisBattle);
!!OW:C?(player:y)/?(interactPlayer:y);

!!if&i^battle_owner_0^=(interactPlayer);
  !!FU(trainer_KillAllUnits):P1;
!!el;
  !!FU(trainer_KillAllUnits):P0;
!!en;

!?FU(trainer_KillAllUnits);
!#VA(side:x);

!!VR(firstStack:y):S(side)*21;
!!VR(lastStack:y):S(firstStack) +20;

!!re i/(firstStack)/(lastStack);
  !!BMi:T?(mon:y) N?(qty:y);
  !!BMi&(mon)>(NO_MON)/(qty)>0:K2000000000; [overflow if (INT_MAX)]
!!en;

!!SN:D;
